<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_s-8RgOAfEeywYqrNq80A_A" name="My2DGame2">
    <eAnnotations xmi:id="_tKKqEOAfEeywYqrNq80A_A" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_tKKqEeAfEeywYqrNq80A_A" source="codegen">
        <details xmi:id="_tKKqEuAfEeywYqrNq80A_A" key="codegenDirectory" value="/My2DGame/src"/>
        <details xmi:id="_uDxLkOAfEeywYqrNq80A_A" key="AssociatedSourceCode" value="/My2DGame/src/entity/Entity.java;93865262/1;/My2DGame/src/entity/NPC_OldMan.java;2491990808/1;/My2DGame/src/entity/Player.java;1410873065/1;/My2DGame/src/main/AssetSetter.java;3645330070/1;/My2DGame/src/main/CollisionChecker.java;2332510632/1;/My2DGame/src/main/EventHandler.java;1022924475/1;/My2DGame/src/main/EventRect.java;3814644125/1;/My2DGame/src/tile/Tile.java;3356897966/1;/My2DGame/src/main/KeyHandler.java;3948853948/1;/My2DGame/src/main/Main.java;507074972/1;/My2DGame/src/main/Sound.java;3775341422/1;/My2DGame/src/main/UI.java;38436431/1;/My2DGame/src/monster/MON_GreenSlime.java;3187938635/1;/My2DGame/src/object/OBJ_Boots.java;1277375959/1;/My2DGame/src/object/OBJ_Chest.java;409087751/1;/My2DGame/src/object/OBJ_Door.java;2457806869/1;/My2DGame/src/object/OBJ_Heart.java;1269043251/1;/My2DGame/src/object/OBJ_Key.java;910998870/1;/My2DGame/src/main/GamePanel.java;1117097607/1;/My2DGame/src/tile/TileManager.java;4120186073/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_tlwZ4OAfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_tlwZ4eAfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_tlwZ4uAfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_tlwZ4-AfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_tlyPEOAfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_tlyPEeAfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_tlyPEuAfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_tlyPE-AfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_tly2IOAfEeywYqrNq80A_A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_tl0rUOAfEeywYqrNq80A_A" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_tl0rUeAfEeywYqrNq80A_A" name="awt">
        <packagedElement xmi:type="uml:Package" xmi:id="_tl1SYOAfEeywYqrNq80A_A" name="image">
          <packagedElement xmi:type="uml:Class" xmi:id="_tyFlseAfEeywYqrNq80A_A" name="BufferedImage"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_tmsOAOAfEeywYqrNq80A_A" name="event">
          <packagedElement xmi:type="uml:Class" xmi:id="_tyi4sOAfEeywYqrNq80A_A" name="KeyEvent"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_tykG0OAfEeywYqrNq80A_A" name="KeyListener"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_tyBUQOAfEeywYqrNq80A_A" name="AlphaComposite"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tyDwgOAfEeywYqrNq80A_A" name="Graphics2D"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tyEXkeAfEeywYqrNq80A_A" name="Rectangle"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tyue4OAfEeywYqrNq80A_A" name="BasicStroke"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tyw7IeAfEeywYqrNq80A_A" name="Color"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tyyJQeAfEeywYqrNq80A_A" name="Font"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tzNAAOAfEeywYqrNq80A_A" name="Dimension"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tzOOIeAfEeywYqrNq80A_A" name="Graphics"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_tmNs4OAfEeywYqrNq80A_A" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_tyOIkOAfEeywYqrNq80A_A" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tzbpgOAfEeywYqrNq80A_A" name="BufferedReader"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tzc3oeAfEeywYqrNq80A_A" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tzdeseAfEeywYqrNq80A_A" name="InputStreamReader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_tmO7AOAfEeywYqrNq80A_A" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_tyOvoeAfEeywYqrNq80A_A" name="Random"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tzPcQeAfEeywYqrNq80A_A" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tzQqYeAfEeywYqrNq80A_A" name="Collections"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_tzRRceAfEeywYqrNq80A_A" name="Comparator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_tmTMcOAfEeywYqrNq80A_A" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_tmTMceAfEeywYqrNq80A_A" name="file">
          <packagedElement xmi:type="uml:Package" xmi:id="_tmTzgOAfEeywYqrNq80A_A" name="spi">
            <packagedElement xmi:type="uml:Class" xmi:id="_tyToIOAfEeywYqrNq80A_A" name="FileSystemProvider"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_tm0w4OAfEeywYqrNq80A_A" name="net">
        <packagedElement xmi:type="uml:Class" xmi:id="_typmYOAfEeywYqrNq80A_A" name="URL"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_tz6KoOAfEeywYqrNq80A_A" name="lang">
        <packagedElement xmi:type="uml:Interface" xmi:id="_tz6KoeAfEeywYqrNq80A_A" name="Runnable"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tz8m4OAfEeywYqrNq80A_A" name="Thread"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_tl15cOAfEeywYqrNq80A_A" name="main">
      <packagedElement xmi:type="uml:Class" xmi:id="_tqOqMOAfEeywYqrNq80A_A" name="AssetSetter">
        <ownedAttribute xmi:id="_t0y7cOAfEeywYqrNq80A_A" name="gp" visibility="package" type="_trYgwOAfEeywYqrNq80A_A" association="_t3axoOAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2C4oOAfEeywYqrNq80A_A" name="AssetSetter" specification="_tyZHsOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2C4oeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2C4ouAfEeywYqrNq80A_A" type="_tqOqMOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>this.gp = gp;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2C4o-AfEeywYqrNq80A_A" name="setObject" specification="_tqPRQOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// set objects that appear in map and their positions&#xD;
		&#xD;
//		gp.obj[0] = new OBJ_Door(gp);&#xD;
//		gp.obj[0].worldX = gp.tileSize * 10;&#xD;
//		gp.obj[0].worldY = gp.tileSize * 9;&#xD;
//		&#xD;
//		gp.obj[1] = new OBJ_Door(gp);&#xD;
//		gp.obj[1].worldX = gp.tileSize * 22;&#xD;
//		gp.obj[1].worldY = gp.tileSize * 21;&#xD;
//		&#xD;
//		gp.obj[2] = new OBJ_Door(gp);&#xD;
//		gp.obj[2].worldX = gp.tileSize * 23;&#xD;
//		gp.obj[2].worldY = gp.tileSize * 21;&#xD;
//		&#xD;
//		gp.obj[3] = new OBJ_Door(gp);&#xD;
//		gp.obj[3].worldX = gp.tileSize * 24;&#xD;
//		gp.obj[3].worldY = gp.tileSize * 21;&#xD;
//		&#xD;
//		gp.obj[4] = new OBJ_Door(gp);&#xD;
//		gp.obj[4].worldX = gp.tileSize * 25;&#xD;
//		gp.obj[4].worldY = gp.tileSize * 21;&#xD;
//		&#xD;
//		gp.obj[5] = new OBJ_Key(gp);&#xD;
//		gp.obj[5].worldX = gp.tileSize * 9;&#xD;
//		gp.obj[5].worldY = gp.tileSize * 9;&#xD;
//		&#xD;
//		gp.obj[6] = new OBJ_Key(gp);&#xD;
//		gp.obj[6].worldX = gp.tileSize * 24;&#xD;
//		gp.obj[6].worldY = gp.tileSize * 23;&#xD;
//		&#xD;
//		gp.obj[7] = new OBJ_Key(gp);&#xD;
//		gp.obj[7].worldX = gp.tileSize * 25;&#xD;
//		gp.obj[7].worldY = gp.tileSize * 23;&#xD;
//		&#xD;
//		gp.obj[8] = new OBJ_Key(gp);&#xD;
//		gp.obj[8].worldX = gp.tileSize * 22;&#xD;
//		gp.obj[8].worldY = gp.tileSize * 23;&#xD;
//		&#xD;
//		gp.obj[9] = new OBJ_Key(gp);&#xD;
//		gp.obj[9].worldX = gp.tileSize * 21;&#xD;
//		gp.obj[9].worldY = gp.tileSize * 23;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2C4pOAfEeywYqrNq80A_A" name="setNPC" specification="_tqRGcOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>gp.npc[0] = new NPC_OldMan(gp);&#xD;
		gp.npc[0].worldX = gp.tileSize * 23;&#xD;
		gp.npc[0].worldY = gp.tileSize * 22;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2DfsOAfEeywYqrNq80A_A" name="setMonster" specification="_tqRGceAfEeywYqrNq80A_A">
          <language>java</language>
          <body>gp.monster[0] = new MON_GreenSlime(gp);&#xD;
		gp.monster[0].worldX = gp.tileSize * 24;&#xD;
		gp.monster[0].worldY = gp.tileSize * 22;&#xD;
		&#xD;
		gp.monster[1] = new MON_GreenSlime(gp);&#xD;
		gp.monster[1].worldX = gp.tileSize * 21;&#xD;
		gp.monster[1].worldY = gp.tileSize * 22;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tqPRQOAfEeywYqrNq80A_A" name="setObject" method="_t2C4o-AfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tqRGcOAfEeywYqrNq80A_A" name="setNPC" method="_t2C4pOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tqRGceAfEeywYqrNq80A_A" name="setMonster" method="_t2DfsOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tyZHsOAfEeywYqrNq80A_A" name="AssetSetter" method="_t2C4oOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tyZuweAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tyZuwuAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tyZuwOAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tyZuw-AfEeywYqrNq80A_A" type="_tqOqMOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tqS7oOAfEeywYqrNq80A_A" name="CollisionChecker">
        <ownedAttribute xmi:id="_t00JkOAfEeywYqrNq80A_A" name="gp" visibility="package" type="_trYgwOAfEeywYqrNq80A_A" association="_t3bYseAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2DfseAfEeywYqrNq80A_A" name="CollisionChecker" specification="_tybj8OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2DfsuAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2Dfs-AfEeywYqrNq80A_A" type="_tqS7oOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>this.gp = gp;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2DftOAfEeywYqrNq80A_A" name="checkTile" specification="_tycLAOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2DfteAfEeywYqrNq80A_A" name="entity" type="_tpRn8OAfEeywYqrNq80A_A"/>
          <language>java</language>
          <body>// find out the position of entity's solid area&#xD;
		int entityLeftWorldX = entity.worldX + entity.solidArea.x;&#xD;
		int entityRightWorldX = entity.worldX + entity.solidArea.x + entity.solidArea.width;&#xD;
		int entityTopWorldY = entity.worldY + entity.solidArea.y;&#xD;
		int entityBottomWorldY = entity.worldY + entity.solidArea.y + entity.solidArea.height;&#xD;
		&#xD;
		// find out the row and column the solid area in&#xD;
		int entityLeftCol = entityLeftWorldX / gp.tileSize;&#xD;
		int entityRightCol = entityRightWorldX / gp.tileSize;&#xD;
		int entityTopRow = entityTopWorldY / gp.tileSize;&#xD;
		int entityBottomRow = entityBottomWorldY / gp.tileSize;&#xD;
		&#xD;
		int tileNum1 = 0, tileNum2 = 0;		// store index of up to 2 tiles that entity can collide&#xD;
		&#xD;
		// simulate entity's movement, find out where it is after the next move has been done&#xD;
		switch (entity.direction) {&#xD;
		case &quot;up&quot;:&#xD;
			entityTopRow = (entityTopWorldY - entity.speed) / gp.tileSize;&#xD;
			tileNum1 = gp.tileM.mapTileNum[entityLeftCol][entityTopRow];&#xD;
			tileNum2 = gp.tileM.mapTileNum[entityRightCol][entityTopRow];&#xD;
			break;&#xD;
		case &quot;down&quot;:&#xD;
			entityBottomRow = (entityBottomWorldY + entity.speed) / gp.tileSize;&#xD;
			tileNum1 = gp.tileM.mapTileNum[entityLeftCol][entityBottomRow];&#xD;
			tileNum2 = gp.tileM.mapTileNum[entityRightCol][entityBottomRow];&#xD;
			break;&#xD;
		case &quot;left&quot;:&#xD;
			entityLeftCol = (entityLeftWorldX - entity.speed) / gp.tileSize;&#xD;
			tileNum1 = gp.tileM.mapTileNum[entityLeftCol][entityTopRow];&#xD;
			tileNum2 = gp.tileM.mapTileNum[entityLeftCol][entityBottomRow];&#xD;
			break;&#xD;
		case &quot;right&quot;:&#xD;
			entityRightCol = (entityRightWorldX + entity.speed) / gp.tileSize;&#xD;
			tileNum1 = gp.tileM.mapTileNum[entityRightCol][entityTopRow];&#xD;
			tileNum2 = gp.tileM.mapTileNum[entityRightCol][entityBottomRow];&#xD;
			break;&#xD;
		}&#xD;
		&#xD;
		// if either tile is unpassable, turn collision to ON.&#xD;
		if (gp.tileM.tile[tileNum1].collision == true || gp.tileM.tile[tileNum2].collision == true) {&#xD;
			entity.collisionOn = true;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2EGwOAfEeywYqrNq80A_A" name="checkObject" specification="_tycLAuAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2EGweAfEeywYqrNq80A_A" name="entity" type="_tpRn8OAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2EGwuAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int index = 999;	// index of the object that entity collided&#xD;
		&#xD;
		for (int i = 0; i &lt; gp.obj.length; i++) {&#xD;
			if (gp.obj[i] != null) {&#xD;
				// get entity solid area's position in world map&#xD;
				entity.solidArea.x = entity.worldX + entity.solidArea.x;&#xD;
				entity.solidArea.y = entity.worldY + entity.solidArea.y;&#xD;
				&#xD;
				// get object solid area's position in world map&#xD;
				gp.obj[i].solidArea.x = gp.obj[i].worldX + gp.obj[i].solidArea.x;&#xD;
				gp.obj[i].solidArea.y = gp.obj[i].worldY + gp.obj[i].solidArea.y;&#xD;
				&#xD;
				// simulate entity's movement, find out next position&#xD;
				switch (entity.direction) {&#xD;
				case &quot;up&quot;:&#xD;
					entity.solidArea.y -= entity.speed;&#xD;
					break;&#xD;
				case &quot;down&quot;:&#xD;
					entity.solidArea.y += entity.speed;&#xD;
					break;&#xD;
				case &quot;left&quot;:&#xD;
					entity.solidArea.x -= entity.speed;&#xD;
					break;&#xD;
				case &quot;right&quot;:&#xD;
					entity.solidArea.x += entity.speed;&#xD;
					break;&#xD;
				}&#xD;
				&#xD;
				// see if there is collision&#xD;
				if (entity.solidArea.intersects(gp.obj[i].solidArea)) {	// check if 2 solid areas collide or not&#xD;
					&#xD;
					if (gp.obj[i].collision == true) {		// check object collision&#xD;
						entity.collisionOn = true;&#xD;
					}&#xD;
					&#xD;
					index = i;&#xD;
				}&#xD;
				&#xD;
				// reset solid area's x and y back to default value&#xD;
				entity.solidArea.x = entity.solidAreaDefaultX;&#xD;
				entity.solidArea.y = entity.solidAreaDefaultY;&#xD;
				&#xD;
				gp.obj[i].solidArea.x = gp.obj[i].solidAreaDefaultX;&#xD;
				gp.obj[i].solidArea.y = gp.obj[i].solidAreaDefaultY;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return index;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2Et0OAfEeywYqrNq80A_A" name="checkEntity" specification="_tydZIOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2Et0eAfEeywYqrNq80A_A" name="entity" type="_tpRn8OAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2Et0uAfEeywYqrNq80A_A" name="target" type="_tpRn8OAfEeywYqrNq80A_A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t2Et0-AfEeywYqrNq80A_A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2Et1OAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int index = 999;	// index of the entity that THE CURRENT ENTITY collided&#xD;
		&#xD;
		for (int i = 0; i &lt; target.length; i++) {&#xD;
			if (target[i] != null &amp;&amp; target[i] != entity) {&#xD;
				// get THE CURRENT ENTITY solid area's position in world map&#xD;
				entity.solidArea.x = entity.worldX + entity.solidArea.x;&#xD;
				entity.solidArea.y = entity.worldY + entity.solidArea.y;&#xD;
				&#xD;
				// get entity solid area's position in world map&#xD;
				target[i].solidArea.x = target[i].worldX + target[i].solidArea.x;&#xD;
				target[i].solidArea.y = target[i].worldY + target[i].solidArea.y;&#xD;
				&#xD;
				// simulate THE CURRENT ENTITY's movement, find out next position&#xD;
				switch (entity.direction) {&#xD;
				case &quot;up&quot;:&#xD;
					entity.solidArea.y -= entity.speed;&#xD;
					break;&#xD;
				case &quot;down&quot;:&#xD;
					entity.solidArea.y += entity.speed;&#xD;
					break;&#xD;
				case &quot;left&quot;:&#xD;
					entity.solidArea.x -= entity.speed;&#xD;
					break;&#xD;
				case &quot;right&quot;:&#xD;
					entity.solidArea.x += entity.speed;&#xD;
					break;&#xD;
				}&#xD;
				&#xD;
				// see if there is collision&#xD;
				if (entity.solidArea.intersects(target[i].solidArea)) {	// check if 2 solid areas collide or not&#xD;
					entity.collisionOn = true;&#xD;
					index = i;&#xD;
				}&#xD;
				&#xD;
				// reset solid area's x and y back to default value&#xD;
				entity.solidArea.x = entity.solidAreaDefaultX;&#xD;
				entity.solidArea.y = entity.solidAreaDefaultY;&#xD;
				&#xD;
				target[i].solidArea.x = target[i].solidAreaDefaultX;&#xD;
				target[i].solidArea.y = target[i].solidAreaDefaultY;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		return index;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2FU4OAfEeywYqrNq80A_A" name="checkPlayer" specification="_tyeAMeAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2FU4eAfEeywYqrNq80A_A" name="entity" type="_tpRn8OAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2FU4uAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean contactPlayer = false;&#xD;
		&#xD;
		// get entity solid area's position in world map&#xD;
		entity.solidArea.x = entity.worldX + entity.solidArea.x;&#xD;
		entity.solidArea.y = entity.worldY + entity.solidArea.y;&#xD;
		&#xD;
		// get player solid area's position in world map&#xD;
		gp.player.solidArea.x = gp.player.worldX + gp.player.solidArea.x;&#xD;
		gp.player.solidArea.y = gp.player.worldY + gp.player.solidArea.y;&#xD;
		&#xD;
		// simulate entity's movement, find out next position&#xD;
		switch (entity.direction) {&#xD;
		case &quot;up&quot;:&#xD;
			entity.solidArea.y -= entity.speed;&#xD;
			break;&#xD;
		case &quot;down&quot;:&#xD;
			entity.solidArea.y += entity.speed;&#xD;
			break;&#xD;
		case &quot;left&quot;:&#xD;
			entity.solidArea.x -= entity.speed;&#xD;
			break;&#xD;
		case &quot;right&quot;:&#xD;
			entity.solidArea.x += entity.speed;&#xD;
			break;&#xD;
		}&#xD;
		&#xD;
		// see if there is collision&#xD;
		if (entity.solidArea.intersects(gp.player.solidArea)) {		// check if 2 solid areas collide or not&#xD;
			entity.collisionOn = true;&#xD;
			contactPlayer = true;&#xD;
		}&#xD;
		&#xD;
		// reset solid area's x and y back to default value&#xD;
		entity.solidArea.x = entity.solidAreaDefaultX;&#xD;
		entity.solidArea.y = entity.solidAreaDefaultY;&#xD;
		&#xD;
		gp.player.solidArea.x = gp.player.solidAreaDefaultX;&#xD;
		gp.player.solidArea.y = gp.player.solidAreaDefaultY;&#xD;
		&#xD;
		return contactPlayer;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tybj8OAfEeywYqrNq80A_A" name="CollisionChecker" method="_t2DfseAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tybj8uAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tybj8-AfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tybj8eAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tybj9OAfEeywYqrNq80A_A" type="_tqS7oOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tycLAOAfEeywYqrNq80A_A" name="checkTile" method="_t2DftOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tycLAeAfEeywYqrNq80A_A" name="entity" type="_tpRn8OAfEeywYqrNq80A_A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tycLAuAfEeywYqrNq80A_A" name="checkObject" method="_t2EGwOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tycyEOAfEeywYqrNq80A_A" name="entity" type="_tpRn8OAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tycyEeAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tydZIOAfEeywYqrNq80A_A" name="checkEntity" method="_t2Et0OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tydZIeAfEeywYqrNq80A_A" name="entity" type="_tpRn8OAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tydZIuAfEeywYqrNq80A_A" name="target" type="_tpRn8OAfEeywYqrNq80A_A">
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tyeAMOAfEeywYqrNq80A_A" value="*"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tydZI-AfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tyeAMeAfEeywYqrNq80A_A" name="checkPlayer" method="_t2FU4OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tyeAMuAfEeywYqrNq80A_A" name="entity" type="_tpRn8OAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tyenQOAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tqZCQOAfEeywYqrNq80A_A" name="EventHandler">
        <ownedAttribute xmi:id="_t01XsOAfEeywYqrNq80A_A" name="gp" visibility="package" type="_trYgwOAfEeywYqrNq80A_A" association="_t3cm0OAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t01-weAfEeywYqrNq80A_A" name="eventRect" visibility="package" type="_tqlPgOAfEeywYqrNq80A_A" association="_t3dN4eAfEeywYqrNq80A_A">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t02l0OAfEeywYqrNq80A_A" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t03M4eAfEeywYqrNq80A_A" name="previousEventX" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t05CEOAfEeywYqrNq80A_A" name="canTouchEvent" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t05CEeAfEeywYqrNq80A_A" value="true"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2rKwOAfEeywYqrNq80A_A" name="previousEventY" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2F78OAfEeywYqrNq80A_A" name="EventHandler" specification="_tyf1YOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2F78eAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2F78uAfEeywYqrNq80A_A" type="_tqZCQOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>this.gp = gp;&#xD;
		&#xD;
		eventRect = new EventRect[gp.maxWorldCol][gp.maxWorldRow];&#xD;
		&#xD;
		for (int col = 0; col &lt; gp.maxWorldCol; col++) {&#xD;
			&#xD;
			for (int row = 0; row &lt; gp.maxWorldRow; row++) {&#xD;
				&#xD;
				eventRect[col][row] = new EventRect();&#xD;
				eventRect[col][row].x = 20;&#xD;
				eventRect[col][row].y = 20;&#xD;
				eventRect[col][row].width = 8;&#xD;
				eventRect[col][row].height = 8;&#xD;
				eventRect[col][row].eventRectDefaultX = eventRect[col][row].x;&#xD;
				eventRect[col][row].eventRectDefaultY = eventRect[col][row].y;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2F78-AfEeywYqrNq80A_A" name="checkEvent" specification="_tqbegOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// if player is 1-tile-size away from the previous event tile,&#xD;
		// this event and other events can be triggered&#xD;
		if (canTouchEvent == false) {&#xD;
			&#xD;
			int xDistance = Math.abs(previousEventX - gp.player.worldX);&#xD;
			int yDistance = Math.abs(previousEventY - gp.player.worldY);&#xD;
			int distance = Math.max(xDistance, yDistance);&#xD;
			if (distance > gp.tileSize) {&#xD;
				canTouchEvent = true;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		if (canTouchEvent == true) {&#xD;
		&#xD;
			if (hit(26, 16, &quot;right&quot;) == true) { damagePit(26, 16, gp.dialogueState); }&#xD;
			if (hit(23, 19, &quot;any&quot;) == true) { damagePit(23, 19, gp.dialogueState); }&#xD;
			if (hit(23, 7, &quot;up&quot;) == true) { healingPool(23, 7, gp.dialogueState); }&#xD;
			if (hit(40, 7, &quot;any&quot;) == true) { teleportPortal(40, 7, gp.dialogueState); }&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2GjAOAfEeywYqrNq80A_A" name="damagePit" specification="_tqdTsOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2GjAeAfEeywYqrNq80A_A" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2GjAuAfEeywYqrNq80A_A" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2GjA-AfEeywYqrNq80A_A" name="gameState">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>gp.gameState = gameState;&#xD;
		gp.ui.currentDialogue = &quot;You fell into a pit!&quot;;&#xD;
		gp.player.life--;&#xD;
//		eventRect[col][row].eventDone = true;&#xD;
		canTouchEvent = false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2GjBOAfEeywYqrNq80A_A" name="healingPool" specification="_tqd6wOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2GjBeAfEeywYqrNq80A_A" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2GjBuAfEeywYqrNq80A_A" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2GjB-AfEeywYqrNq80A_A" name="gameState">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>gp.gameState = gameState;&#xD;
		gp.ui.currentDialogue = &quot;You are drinking the water.\nYour life has been recovered!&quot;;&#xD;
		gp.player.life = gp.player.maxLife;&#xD;
		canTouchEvent = false;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2GjCOAfEeywYqrNq80A_A" name="teleportPortal" specification="_tqfv8OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2GjCeAfEeywYqrNq80A_A" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2GjCuAfEeywYqrNq80A_A" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2GjC-AfEeywYqrNq80A_A" name="gameState">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>gp.gameState = gameState;&#xD;
		gp.ui.currentDialogue = &quot;Teleport!&quot;;&#xD;
		gp.player.worldX = gp.tileSize * 23;&#xD;
		gp.player.worldY = gp.tileSize * 21;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2HKEOAfEeywYqrNq80A_A" name="hit" specification="_tqgXAOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2HKEeAfEeywYqrNq80A_A" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2HKEuAfEeywYqrNq80A_A" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2HKE-AfEeywYqrNq80A_A" name="requireDirection">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2HKFOAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>boolean hit = false;&#xD;
		&#xD;
		// PLAYER POSITION&#xD;
		gp.player.solidArea.x = gp.player.worldX + gp.player.solidArea.x;&#xD;
		gp.player.solidArea.y = gp.player.worldY + gp.player.solidArea.y;&#xD;
		&#xD;
		// EVENT TILE POSITION&#xD;
		eventRect[col][row].x = col * gp.tileSize + eventRect[col][row].x;&#xD;
		eventRect[col][row].y = row * gp.tileSize + eventRect[col][row].y;&#xD;
		&#xD;
		if (gp.player.solidArea.intersects(eventRect[col][row]) == true&#xD;
				&amp;&amp; eventRect[col][row].eventDone == false) {&#xD;
			&#xD;
			// event occurs only when player has certain direction or any direction&#xD;
			if (gp.player.direction.contentEquals(requireDirection) || requireDirection.contentEquals(&quot;any&quot;)) {&#xD;
				hit = true;&#xD;
				&#xD;
				previousEventX = gp.player.worldX;&#xD;
				previousEventY = gp.player.worldY;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// RESET&#xD;
		gp.player.solidArea.x = gp.player.solidAreaDefaultX;&#xD;
		gp.player.solidArea.y = gp.player.solidAreaDefaultY;&#xD;
		eventRect[col][row].x = eventRect[col][row].eventRectDefaultX;&#xD;
		eventRect[col][row].y = eventRect[col][row].eventRectDefaultY;&#xD;
		&#xD;
		return hit;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tqbegOAfEeywYqrNq80A_A" name="checkEvent" method="_t2F78-AfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tqdTsOAfEeywYqrNq80A_A" name="damagePit" method="_t2GjAOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqdTseAfEeywYqrNq80A_A" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqdTsuAfEeywYqrNq80A_A" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqdTs-AfEeywYqrNq80A_A" name="gameState">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tqd6wOAfEeywYqrNq80A_A" name="healingPool" method="_t2GjBOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqd6weAfEeywYqrNq80A_A" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqfI4OAfEeywYqrNq80A_A" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqfI4eAfEeywYqrNq80A_A" name="gameState">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tqfv8OAfEeywYqrNq80A_A" name="teleportPortal" method="_t2GjCOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqfv8eAfEeywYqrNq80A_A" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqfv8uAfEeywYqrNq80A_A" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqfv8-AfEeywYqrNq80A_A" name="gameState">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tqgXAOAfEeywYqrNq80A_A" name="hit" method="_t2HKEOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqgXAeAfEeywYqrNq80A_A" name="col">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqgXAuAfEeywYqrNq80A_A" name="row">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqgXA-AfEeywYqrNq80A_A" name="requireDirection">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqgXBOAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tyf1YOAfEeywYqrNq80A_A" name="EventHandler" method="_t2F78OAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tygccOAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tygcceAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tyf1YeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tygccuAfEeywYqrNq80A_A" type="_tqZCQOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tqlPgOAfEeywYqrNq80A_A" name="EventRect">
        <generalization xmi:id="_tzvykOAfEeywYqrNq80A_A" general="_tyEXkeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t06QMOAfEeywYqrNq80A_A" name="eventRectDefaultX" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t07eUOAfEeywYqrNq80A_A" name="eventDone" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t07eUeAfEeywYqrNq80A_A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2sY4eAfEeywYqrNq80A_A" name="eventRectDefaultY" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tqpg8OAfEeywYqrNq80A_A" name="KeyHandler">
        <ownedAttribute xmi:id="_t0-hoeAfEeywYqrNq80A_A" name="gp" visibility="package" type="_trYgwOAfEeywYqrNq80A_A" association="_t3fDEeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t0_IseAfEeywYqrNq80A_A" name="upPressed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2tnAeAfEeywYqrNq80A_A" name="downPressed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2uOEuAfEeywYqrNq80A_A" name="leftPressed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2vcMOAfEeywYqrNq80A_A" name="rightPressed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2wDQOAfEeywYqrNq80A_A" name="enterPressed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_tzwZoOAfEeywYqrNq80A_A" client="_tqpg8OAfEeywYqrNq80A_A" supplier="_tykG0OAfEeywYqrNq80A_A" contract="_tykG0OAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2HxIOAfEeywYqrNq80A_A" name="KeyHandler" specification="_tyl8AOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2HxIeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2HxIuAfEeywYqrNq80A_A" type="_tqpg8OAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>this.gp = gp;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2IYMOAfEeywYqrNq80A_A" name="keyPressed" specification="_tzy14OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2IYMeAfEeywYqrNq80A_A" name="e" type="_tyi4sOAfEeywYqrNq80A_A"/>
          <language>java</language>
          <body>int code = e.getKeyCode();&#xD;
		&#xD;
		// TITLE STATE&#xD;
		if (gp.gameState == gp.titleState) {&#xD;
			&#xD;
			if (code == KeyEvent.VK_W) {&#xD;
				gp.ui.commandNum--;&#xD;
				if (gp.ui.commandNum &lt; 0) {&#xD;
					gp.ui.commandNum = 2;&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			if (code == KeyEvent.VK_S) {&#xD;
				gp.ui.commandNum++;&#xD;
				if (gp.ui.commandNum > 2) {&#xD;
					gp.ui.commandNum = 0;&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			if (code == KeyEvent.VK_ENTER) {&#xD;
				switch (gp.ui.commandNum) {&#xD;
				case 0:&#xD;
					gp.playMusic(0);&#xD;
					gp.gameState = gp.playState;&#xD;
					break;&#xD;
				case 1:&#xD;
					// add later&#xD;
					break;&#xD;
				case 2:&#xD;
					System.exit(0);&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// PLAY STATE&#xD;
		else if (gp.gameState == gp.playState) {&#xD;
			&#xD;
			if (code == KeyEvent.VK_W) {&#xD;
				upPressed = true;&#xD;
			}&#xD;
			&#xD;
			if (code == KeyEvent.VK_S) {&#xD;
				downPressed = true;&#xD;
			}&#xD;
			&#xD;
			if (code == KeyEvent.VK_A) {&#xD;
				leftPressed = true;&#xD;
			}&#xD;
			&#xD;
			if (code == KeyEvent.VK_D) {&#xD;
				rightPressed = true;&#xD;
			}&#xD;
			&#xD;
			if (code == KeyEvent.VK_P) {&#xD;
				gp.gameState = gp.pauseState;&#xD;
			}&#xD;
			&#xD;
			if (code == KeyEvent.VK_ENTER) {&#xD;
				enterPressed = true;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// PAUSE STATE&#xD;
		else if (gp.gameState == gp.pauseState) {&#xD;
			&#xD;
			if (code == KeyEvent.VK_P) {&#xD;
				gp.gameState = gp.playState;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// DIALOGUE STATE&#xD;
		else if (gp.gameState == gp.dialogueState) {&#xD;
			&#xD;
			if (code == KeyEvent.VK_ENTER) {&#xD;
				gp.gameState = gp.playState;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2IYMuAfEeywYqrNq80A_A" name="keyReleased" specification="_tz0EAeAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2IYM-AfEeywYqrNq80A_A" name="e" type="_tyi4sOAfEeywYqrNq80A_A"/>
          <language>java</language>
          <body>int code = e.getKeyCode();&#xD;
		&#xD;
		if (code == KeyEvent.VK_W) {&#xD;
			upPressed = false;&#xD;
		}&#xD;
		&#xD;
		if (code == KeyEvent.VK_S) {&#xD;
			downPressed = false;&#xD;
		}&#xD;
		&#xD;
		if (code == KeyEvent.VK_A) {&#xD;
			leftPressed = false;&#xD;
		}&#xD;
		&#xD;
		if (code == KeyEvent.VK_D) {&#xD;
			rightPressed = false;&#xD;
		}&#xD;
		&#xD;
		if (code == KeyEvent.VK_ENTER) {&#xD;
			enterPressed = false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tyl8AOAfEeywYqrNq80A_A" name="KeyHandler" method="_t2HxIOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tymjEOAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tymjEeAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tyl8AeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tymjEuAfEeywYqrNq80A_A" type="_tqpg8OAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tzxnwOAfEeywYqrNq80A_A" name="keyTyped">
          <ownedParameter xmi:id="_tzxnweAfEeywYqrNq80A_A" name="e" type="_tyi4sOAfEeywYqrNq80A_A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tzy14OAfEeywYqrNq80A_A" name="keyPressed" method="_t2IYMOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tzy14eAfEeywYqrNq80A_A" name="e" type="_tyi4sOAfEeywYqrNq80A_A"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tz0EAeAfEeywYqrNq80A_A" name="keyReleased" method="_t2IYMuAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tz0EAuAfEeywYqrNq80A_A" name="e" type="_tyi4sOAfEeywYqrNq80A_A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tqtyYOAfEeywYqrNq80A_A" name="Main">
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2I_QOAfEeywYqrNq80A_A" name="main" specification="_tqwOoOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2I_QeAfEeywYqrNq80A_A" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t2I_QuAfEeywYqrNq80A_A" value="*"/>
          </ownedParameter>
          <language>java</language>
          <body>JFrame window = new JFrame();	// create window&#xD;
		window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);	// when click X, window closes&#xD;
		window.setResizable(false);		// window is not resizable&#xD;
		window.setTitle(&quot;2D Adventure&quot;);	// set window's title&#xD;
		&#xD;
		GamePanel gamePanel = new GamePanel();&#xD;
		window.add(gamePanel);	// add game panel to window&#xD;
		&#xD;
		window.pack();&#xD;
		&#xD;
		window.setLocationRelativeTo(null); 	// window is displayed at the center&#xD;
		window.setVisible(true);	// we can see this window&#xD;
		&#xD;
		gamePanel.setupGame();&#xD;
		gamePanel.startGameThread();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tqwOoOAfEeywYqrNq80A_A" name="main" isStatic="true" method="_t2I_QOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqwOoeAfEeywYqrNq80A_A" name="args">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_tqwOouAfEeywYqrNq80A_A" value="*"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tqxcwOAfEeywYqrNq80A_A" name="Sound">
        <ownedAttribute xmi:id="_t1Bk8OAfEeywYqrNq80A_A" name="clip" visibility="package" type="_tyspseAfEeywYqrNq80A_A" association="_t3g4QeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t1CzEOAfEeywYqrNq80A_A" name="soundURL" visibility="package" type="_typmYOAfEeywYqrNq80A_A" association="_t3iGYOAfEeywYqrNq80A_A">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t1CzEeAfEeywYqrNq80A_A" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1DaIOAfEeywYqrNq80A_A" value="new URL[30]"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2JmUOAfEeywYqrNq80A_A" name="Sound" specification="_tqyq4OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2JmUeAfEeywYqrNq80A_A" type="_tqxcwOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>soundURL[0] = getClass().getResource(&quot;/sound/BlueBoyAdventure.wav&quot;);&#xD;
		soundURL[1] = getClass().getResource(&quot;/sound/coin.wav&quot;);&#xD;
		soundURL[2] = getClass().getResource(&quot;/sound/powerup.wav&quot;);&#xD;
		soundURL[3] = getClass().getResource(&quot;/sound/unlock.wav&quot;);&#xD;
		soundURL[4] = getClass().getResource(&quot;/sound/fanfare.wav&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2JmUuAfEeywYqrNq80A_A" name="setFile" specification="_tqz5AOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2JmU-AfEeywYqrNq80A_A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>try {&#xD;
			AudioInputStream ais = AudioSystem.getAudioInputStream(soundURL[i]);&#xD;
			clip = AudioSystem.getClip();&#xD;
			clip.open(ais);&#xD;
			&#xD;
		} catch(Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2JmVOAfEeywYqrNq80A_A" name="play" specification="_tq0gEOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>clip.start();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2KNYOAfEeywYqrNq80A_A" name="loop" specification="_tq1HIOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>clip.loop(Clip.LOOP_CONTINUOUSLY);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2KNYeAfEeywYqrNq80A_A" name="stop" specification="_tq1HIeAfEeywYqrNq80A_A">
          <language>java</language>
          <body>clip.stop();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tqyq4OAfEeywYqrNq80A_A" name="Sound" method="_t2JmUOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tqyq4eAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tqzR8OAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tqzR8eAfEeywYqrNq80A_A" type="_tqxcwOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tqz5AOAfEeywYqrNq80A_A" name="setFile" method="_t2JmUuAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqz5AeAfEeywYqrNq80A_A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tq0gEOAfEeywYqrNq80A_A" name="play" method="_t2JmVOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tq1HIOAfEeywYqrNq80A_A" name="loop" method="_t2KNYOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tq1HIeAfEeywYqrNq80A_A" name="stop" method="_t2KNYeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tq2VQOAfEeywYqrNq80A_A" name="UI">
        <ownedAttribute xmi:id="_t1EBMOAfEeywYqrNq80A_A" name="gp" visibility="package" type="_trYgwOAfEeywYqrNq80A_A" association="_t3jUgeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t1EoQeAfEeywYqrNq80A_A" name="g2" visibility="package" type="_tyDwgOAfEeywYqrNq80A_A" association="_t3kioeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t1FPUeAfEeywYqrNq80A_A" name="commandNum">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1FPUuAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1F2YeAfEeywYqrNq80A_A" name="heart_full" visibility="package" type="_tyFlseAfEeywYqrNq80A_A" association="_t3lJseAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t1HEgOAfEeywYqrNq80A_A" name="messageOn" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1HrkOAfEeywYqrNq80A_A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1ISoOAfEeywYqrNq80A_A" name="message" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1ISoeAfEeywYqrNq80A_A" value="&quot;&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1JgwOAfEeywYqrNq80A_A" name="messageCounter" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1JgweAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1KH0OAfEeywYqrNq80A_A" name="currentDialogue">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1LV8OAfEeywYqrNq80A_A" name="gameFinished">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1LV8eAfEeywYqrNq80A_A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2wqUeAfEeywYqrNq80A_A" name="heart_half" visibility="package" type="_tyFlseAfEeywYqrNq80A_A" association="_t4FgAOAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2xRYuAfEeywYqrNq80A_A" name="heart_blank" visibility="package" type="_tyFlseAfEeywYqrNq80A_A" association="_t4GHEeAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2K0cOAfEeywYqrNq80A_A" name="UI" specification="_tyzXYOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2K0ceAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2K0cuAfEeywYqrNq80A_A" type="_tq2VQOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>this.gp = gp;&#xD;
		&#xD;
		Entity heart = new OBJ_Heart(gp);&#xD;
		heart_full = heart.image;&#xD;
		heart_half = heart.image2;&#xD;
		heart_blank = heart.image3;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2LbgOAfEeywYqrNq80A_A" name="showMessage" specification="_tq700OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2LbgeAfEeywYqrNq80A_A" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>// set the message to display&#xD;
		message = text;&#xD;
		messageOn = true;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2LbguAfEeywYqrNq80A_A" name="draw" specification="_tz4VcOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2Lbg-AfEeywYqrNq80A_A" name="g2" type="_tyDwgOAfEeywYqrNq80A_A"/>
          <language>java</language>
          <body>this.g2 = g2;&#xD;
		&#xD;
		// TITLE STATE&#xD;
		if (gp.gameState == gp.titleState) {&#xD;
			drawTitleScreen();&#xD;
		}&#xD;
		&#xD;
		// PLAY STATE&#xD;
		if (gp.gameState == gp.playState) {&#xD;
			// do play state stuff&#xD;
			drawPlayerLife();&#xD;
		}&#xD;
		&#xD;
		// PAUSE STATE&#xD;
		if (gp.gameState == gp.pauseState) {&#xD;
			drawPauseScreen();&#xD;
			drawPlayerLife();&#xD;
		}&#xD;
		&#xD;
		// DIALOGUE STATE&#xD;
		if (gp.gameState == gp.dialogueState) {&#xD;
			drawDialogueScreen();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2MCkOAfEeywYqrNq80A_A" name="drawPlayerLife" specification="_tq8b4OAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// DRAW MAX LIFE&#xD;
		int x = gp.tileSize/2;&#xD;
		int y = gp.tileSize/2;&#xD;
		int i = 0;&#xD;
		while (i &lt; gp.player.maxLife/2) {&#xD;
			g2.drawImage(heart_blank, x, y,gp.tileSize,gp.tileSize,null);&#xD;
			i++;&#xD;
			x+= gp.tileSize;&#xD;
		}&#xD;
		&#xD;
		//	DRAW CURRENT LIFE&#xD;
		x = gp.tileSize/2;&#xD;
		y = gp.tileSize/2;&#xD;
		i = 0;&#xD;
		while (i &lt; gp.player.life) {&#xD;
			g2.drawImage(heart_half, x, y,gp.tileSize,gp.tileSize,null);&#xD;
			i++;&#xD;
			if(i&lt;gp.player.life) {&#xD;
				g2.drawImage(heart_full, x, y,gp.tileSize,gp.tileSize,null);&#xD;
			}&#xD;
			i++;&#xD;
			x+= gp.tileSize;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2MCkeAfEeywYqrNq80A_A" name="drawTitleScreen" specification="_tq9C8OAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// screen color&#xD;
		g2.setColor(new Color(70, 150, 80));&#xD;
		g2.fillRect(0, 0, gp.screenWidth, gp.screenHeight);&#xD;
		&#xD;
		// title name&#xD;
		g2.setFont(g2.getFont().deriveFont(Font.BOLD, 80F));&#xD;
		String text = &quot;Blue Boy Adventure&quot;;&#xD;
		int x = getXForCenteredText(text);&#xD;
		int y = gp.tileSize * 3;&#xD;
		&#xD;
		// shadow title&#xD;
		g2.setColor(Color.black);&#xD;
		g2.drawString(text, x + 5, y + 5);&#xD;
		&#xD;
		// main title&#xD;
		g2.setColor(Color.white);&#xD;
		g2.drawString(text, x, y);&#xD;
		&#xD;
		// display character&#xD;
		x = gp.screenWidth / 2 - gp.tileSize;&#xD;
		y += gp.tileSize * 2;&#xD;
		g2.drawImage(gp.player.down1, x, y, gp.tileSize * 2, gp.tileSize * 2, null);&#xD;
		&#xD;
		// menu&#xD;
		g2.setFont(g2.getFont().deriveFont(Font.BOLD, 40F));&#xD;
		&#xD;
		text = &quot;NEW GAME&quot;;&#xD;
		x = getXForCenteredText(text);&#xD;
		y += gp.tileSize * 4;&#xD;
		g2.drawString(text, x, y);&#xD;
		if (commandNum == 0) {&#xD;
			g2.drawString(&quot;>&quot;, x - gp.tileSize, y);&#xD;
		}&#xD;
		&#xD;
		text = &quot;LOAD GAME&quot;;&#xD;
		x = getXForCenteredText(text);&#xD;
		y += gp.tileSize;&#xD;
		g2.drawString(text, x, y);&#xD;
		if (commandNum == 1) {&#xD;
			g2.drawString(&quot;>&quot;, x - gp.tileSize, y);&#xD;
		}&#xD;
		&#xD;
		text = &quot;QUIT&quot;;&#xD;
		x = getXForCenteredText(text);&#xD;
		y += gp.tileSize;&#xD;
		g2.drawString(text, x, y);&#xD;
		if (commandNum == 2) {&#xD;
			g2.drawString(&quot;>&quot;, x - gp.tileSize, y);&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2MCkuAfEeywYqrNq80A_A" name="drawPauseScreen" specification="_tq9qAOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 80F));&#xD;
		g2.setColor(Color.white);&#xD;
		&#xD;
		String text = &quot;PAUSED&quot;;&#xD;
		&#xD;
		int x = getXForCenteredText(text);&#xD;
		int y = gp.screenHeight / 2;&#xD;
		&#xD;
		g2.drawString(text, x, y);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2MCk-AfEeywYqrNq80A_A" name="drawDialogueScreen" specification="_tq9qAeAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// WINDOW&#xD;
		int x = gp.tileSize * 2;&#xD;
		int y = gp.tileSize / 2;&#xD;
		int width = gp.screenWidth - gp.tileSize * 4;&#xD;
		int height = gp.tileSize * 4;&#xD;
		&#xD;
		drawSubWindow(x, y, width, height);&#xD;
		&#xD;
		// DIALOGUE&#xD;
		g2.setFont(g2.getFont().deriveFont(Font.PLAIN, 28F));&#xD;
		x += gp.tileSize;&#xD;
		y += gp.tileSize;&#xD;
		&#xD;
		for (String line: currentDialogue.split(&quot;\n&quot;)) {&#xD;
			g2.drawString(line, x, y);&#xD;
			y += 40;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2MClOAfEeywYqrNq80A_A" name="drawSubWindow" specification="_tq-REOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2MpoOAfEeywYqrNq80A_A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2MpoeAfEeywYqrNq80A_A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2MpouAfEeywYqrNq80A_A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2Mpo-AfEeywYqrNq80A_A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>Color c = new Color(0, 0, 0, 210);&#xD;
		g2.setColor(c);&#xD;
		g2.fillRoundRect(x, y, width, height, 35, 35);&#xD;
		&#xD;
		c = new Color(255, 255, 255);&#xD;
		g2.setColor(c);&#xD;
		g2.setStroke(new BasicStroke(5));&#xD;
		g2.drawRoundRect(x + 5, y + 5, width - 10, height - 10, 25, 25);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2MppOAfEeywYqrNq80A_A" name="getXForCenteredText" specification="_trCigOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2MppeAfEeywYqrNq80A_A" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2MppuAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>int length = (int) g2.getFontMetrics().getStringBounds(text, g2).getWidth();&#xD;
		return gp.screenWidth / 2 - length / 2;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tq700OAfEeywYqrNq80A_A" name="showMessage" method="_t2LbgOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tq700eAfEeywYqrNq80A_A" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tq8b4OAfEeywYqrNq80A_A" name="drawPlayerLife" visibility="private" method="_t2MCkOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tq9C8OAfEeywYqrNq80A_A" name="drawTitleScreen" method="_t2MCkeAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tq9qAOAfEeywYqrNq80A_A" name="drawPauseScreen" method="_t2MCkuAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tq9qAeAfEeywYqrNq80A_A" name="drawDialogueScreen" method="_t2MCk-AfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tq-REOAfEeywYqrNq80A_A" name="drawSubWindow" method="_t2MClOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_trB7cOAfEeywYqrNq80A_A" name="x">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_trB7ceAfEeywYqrNq80A_A" name="y">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_trB7cuAfEeywYqrNq80A_A" name="width">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_trB7c-AfEeywYqrNq80A_A" name="height">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_trCigOAfEeywYqrNq80A_A" name="getXForCenteredText" method="_t2MppOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_trDwoOAfEeywYqrNq80A_A" name="text">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <ownedParameter xmi:id="_trDwoeAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tyzXYOAfEeywYqrNq80A_A" name="UI" method="_t2K0cOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tyz-cOAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tyz-ceAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tyzXYeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tyz-cuAfEeywYqrNq80A_A" type="_tq2VQOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tz4VcOAfEeywYqrNq80A_A" name="draw" method="_t2LbguAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tz4VceAfEeywYqrNq80A_A" name="g2" type="_tyDwgOAfEeywYqrNq80A_A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_trYgwOAfEeywYqrNq80A_A" name="GamePanel">
        <generalization xmi:id="_t0A4UeAfEeywYqrNq80A_A" general="_tzSfkeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t1MkEOAfEeywYqrNq80A_A" name="originalTileSize" visibility="package" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1NLIOAfEeywYqrNq80A_A" value="16"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1NyMOAfEeywYqrNq80A_A" name="scale" visibility="package" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1NyMeAfEeywYqrNq80A_A" value="3"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1OZQOAfEeywYqrNq80A_A" name="tileSize" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1PAUOAfEeywYqrNq80A_A" value="originalTileSize * scale"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1PnYOAfEeywYqrNq80A_A" name="maxScreenCol" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1PnYeAfEeywYqrNq80A_A" value="16"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1QOcOAfEeywYqrNq80A_A" name="maxScreenRow" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1QOceAfEeywYqrNq80A_A" value="12"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1Q1gOAfEeywYqrNq80A_A" name="screenWidth" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1Q1geAfEeywYqrNq80A_A" value="tileSize * maxScreenCol"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1RckOAfEeywYqrNq80A_A" name="screenHeight" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1RckeAfEeywYqrNq80A_A" value="tileSize * maxScreenRow"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1SDoeAfEeywYqrNq80A_A" name="maxWorldCol" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1SDouAfEeywYqrNq80A_A" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1SqseAfEeywYqrNq80A_A" name="maxWorldRow" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1SqsuAfEeywYqrNq80A_A" value="50"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1T40OAfEeywYqrNq80A_A" name="FPS" visibility="package">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1Uf4OAfEeywYqrNq80A_A" value="60"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1VG8eAfEeywYqrNq80A_A" name="tileM" type="_tr3B4OAfEeywYqrNq80A_A" association="_t3mX0eAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1VG8uAfEeywYqrNq80A_A" value="new TileManager(this)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1VuAeAfEeywYqrNq80A_A" name="keyH" type="_tqpg8OAfEeywYqrNq80A_A" association="_t3m-4eAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1WVEOAfEeywYqrNq80A_A" value="new KeyHandler(this)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1W8IOAfEeywYqrNq80A_A" name="music" visibility="package" type="_tqxcwOAfEeywYqrNq80A_A" association="_t3oNAeAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1W8IeAfEeywYqrNq80A_A" value="new Sound()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1XjMeAfEeywYqrNq80A_A" name="se" visibility="package" type="_tqxcwOAfEeywYqrNq80A_A" association="_t3pbIOAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1XjMuAfEeywYqrNq80A_A" value="new Sound()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1YKQeAfEeywYqrNq80A_A" name="cChecker" type="_tqS7oOAfEeywYqrNq80A_A" association="_t3qpQOAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1YKQuAfEeywYqrNq80A_A" value="new CollisionChecker(this)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1YxUeAfEeywYqrNq80A_A" name="aSetter" type="_tqOqMOAfEeywYqrNq80A_A" association="_t3rQUeAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1YxUuAfEeywYqrNq80A_A" value="new AssetSetter(this)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1ZYYeAfEeywYqrNq80A_A" name="eHandler" type="_tqZCQOAfEeywYqrNq80A_A" association="_t3r3YeAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1Z_cOAfEeywYqrNq80A_A" value="new EventHandler(this)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1amgOAfEeywYqrNq80A_A" name="gameThread" visibility="package" type="_tz8m4OAfEeywYqrNq80A_A" association="_t3tFgOAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t1bNkOAfEeywYqrNq80A_A" name="playTime">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1bNkeAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1cbsOAfEeywYqrNq80A_A" name="ui" type="_tq2VQOAfEeywYqrNq80A_A" association="_t3tskeAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1cbseAfEeywYqrNq80A_A" value="new UI(this)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1dCweAfEeywYqrNq80A_A" name="player" type="_tqDrEOAfEeywYqrNq80A_A" association="_t3uToeAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1dp0OAfEeywYqrNq80A_A" value="new Player(this, keyH)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1dp0uAfEeywYqrNq80A_A" name="obj" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3vhweAfEeywYqrNq80A_A">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t1eQ4OAfEeywYqrNq80A_A" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1eQ4uAfEeywYqrNq80A_A" value="new Entity[10]"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1e38eAfEeywYqrNq80A_A" name="npc" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3wI0eAfEeywYqrNq80A_A">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t1ffAOAfEeywYqrNq80A_A" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1ffAuAfEeywYqrNq80A_A" value="new Entity[10]"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1gGEeAfEeywYqrNq80A_A" name="monster" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3xW8eAfEeywYqrNq80A_A">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t1gGEuAfEeywYqrNq80A_A" value="*"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1hUMOAfEeywYqrNq80A_A" value="new Entity[20]"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1h7QOAfEeywYqrNq80A_A" name="entityList" visibility="package" type="_tzPcQeAfEeywYqrNq80A_A" association="_t3x-AeAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1iiUeAfEeywYqrNq80A_A" value="new ArrayList&lt;>()"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1jJYeAfEeywYqrNq80A_A" name="gameState">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1jwceAfEeywYqrNq80A_A" name="titleState" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1jwcuAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1k-kOAfEeywYqrNq80A_A" name="playState" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1lloOAfEeywYqrNq80A_A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1oB4OAfEeywYqrNq80A_A" name="pauseState" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1oB4eAfEeywYqrNq80A_A" value="2"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t1oo8OAfEeywYqrNq80A_A" name="dialogueState" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t1oo8eAfEeywYqrNq80A_A" value="3"/>
        </ownedAttribute>
        <interfaceRealization xmi:id="_tz7YweAfEeywYqrNq80A_A" client="_trYgwOAfEeywYqrNq80A_A" supplier="_tz6KoeAfEeywYqrNq80A_A" contract="_tz6KoeAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2RiIOAfEeywYqrNq80A_A" name="GamePanel" specification="_trgckOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2RiIeAfEeywYqrNq80A_A" type="_trYgwOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>this.setPreferredSize(new Dimension(screenWidth, screenHeight));	// set size for game panel&#xD;
		this.setBackground(Color.black);	// background color: black&#xD;
		this.setDoubleBuffered(true);	// improve game performance&#xD;
		this.addKeyListener(keyH);	// add key listener to game panel&#xD;
		this.setFocusable(true);	// this game panel can be focused to receive key input&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2RiIuAfEeywYqrNq80A_A" name="setupGame" specification="_trhDo-AfEeywYqrNq80A_A">
          <language>java</language>
          <body>aSetter.setObject();&#xD;
		aSetter.setNPC();&#xD;
		aSetter.setMonster();&#xD;
		gameState = titleState;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2RiI-AfEeywYqrNq80A_A" name="startGameThread" specification="_trhDpOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>gameThread = new Thread(this);&#xD;
		gameThread.start();		// this will call run method&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2RiJOAfEeywYqrNq80A_A" name="run" specification="_trhqsOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>double drawInterval = 1000000000 / FPS;		// draw after every 0.01666s&#xD;
		double delta = 0;	// the number of passed drawInterval&#xD;
		long lastTime = System.nanoTime();		// time in previous loop&#xD;
		long currentTime;	// current system time&#xD;
		&#xD;
		long timer = 0;		// the amount of time has passed&#xD;
		int drawCount= 0;	// the number of times we updated and drawn&#xD;
		&#xD;
		while (gameThread != null) {&#xD;
			currentTime = System.nanoTime();&#xD;
			&#xD;
			delta += (currentTime - lastTime) / drawInterval;&#xD;
			timer += (currentTime - lastTime);&#xD;
			playTime += (currentTime - lastTime) / 1000000000F;&#xD;
			&#xD;
			lastTime = currentTime;&#xD;
			&#xD;
			if (delta >= 1) {	// if 1 or more drawInterval have passed, let's update and repaint&#xD;
				update();&#xD;
				repaint();&#xD;
				&#xD;
				delta--;	// minus 1 loop that we just did&#xD;
				drawCount++;&#xD;
			}&#xD;
			&#xD;
			if (timer >= 1000000000) {&#xD;
				timer = 0;&#xD;
				drawCount = 0;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2RiJeAfEeywYqrNq80A_A" name="update" specification="_tri40uAfEeywYqrNq80A_A">
          <language>java</language>
          <body>if (gameState == playState) {&#xD;
			&#xD;
			// PLAYER&#xD;
			player.update();&#xD;
			&#xD;
			// NPC&#xD;
			for (int i = 0; i &lt; npc.length; i++) {&#xD;
				if (npc[i] != null) {&#xD;
					npc[i].update();&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			// MONSTER&#xD;
			for (int i = 0; i &lt; monster.length; i++) {&#xD;
				if (monster[i] != null) {&#xD;
					monster[i].update();&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2SJMOAfEeywYqrNq80A_A" name="paintComponent" specification="_t0ARQOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2SJMeAfEeywYqrNq80A_A" name="g" type="_tzOOIeAfEeywYqrNq80A_A"/>
          <language>java</language>
          <body>super.paintComponent(g);&#xD;
		Graphics2D g2 = (Graphics2D) g;&#xD;
		&#xD;
		if (gameState == titleState) {&#xD;
			ui.draw(g2);&#xD;
		} else {&#xD;
			// TILES&#xD;
			tileM.draw(g2);		// make sure to draw tile before player, otherwise, we can not see player&#xD;
			&#xD;
			// ADD ENTITIES TO ARRAY&#xD;
			// player&#xD;
			entityList.add(player);&#xD;
			// npc&#xD;
			for (int i = 0; i &lt; npc.length; i++) {&#xD;
				if (npc[i] != null) {&#xD;
					entityList.add(npc[i]);&#xD;
				}&#xD;
			}&#xD;
			// object&#xD;
			for (int i = 0; i &lt; obj.length; i++) {&#xD;
				if (obj[i] != null) {&#xD;
					entityList.add(obj[i]);&#xD;
				}&#xD;
			}&#xD;
			// monster&#xD;
			for (int i = 0; i &lt; monster.length; i++) {&#xD;
				if (monster[i] != null) {&#xD;
					entityList.add(monster[i]);&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			// SORT ARRAY&#xD;
			Collections.sort(entityList, new Comparator&lt;Entity>() {&#xD;
&#xD;
				@Override&#xD;
				public int compare(Entity e1, Entity e2) {&#xD;
					return Integer.compare(e1.worldY, e2.worldY);&#xD;
				}&#xD;
			});&#xD;
			&#xD;
			// DRAW ENTITIES&#xD;
			for (int i = 0; i &lt; entityList.size(); i++) {&#xD;
				entityList.get(i).draw(g2);&#xD;
			}&#xD;
			&#xD;
			// CLEAR ARRAY&#xD;
			entityList.clear();&#xD;
			&#xD;
			// UI&#xD;
			ui.draw(g2);&#xD;
		}&#xD;
		&#xD;
		g2.dispose();	// release memory&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2SJMuAfEeywYqrNq80A_A" name="playMusic" specification="_trjf4OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2SJM-AfEeywYqrNq80A_A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>music.setFile(i);&#xD;
		music.play();&#xD;
		music.loop();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2SJNOAfEeywYqrNq80A_A" name="stopMusic" specification="_trkuAOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>music.stop();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2SJNeAfEeywYqrNq80A_A" name="playSE" specification="_trnKQOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2SJNuAfEeywYqrNq80A_A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>se.setFile(i);&#xD;
		se.play();&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_trgckOAfEeywYqrNq80A_A" name="GamePanel" method="_t2RiIOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_trhDoOAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_trhDoeAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_trhDouAfEeywYqrNq80A_A" type="_trYgwOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_trhDo-AfEeywYqrNq80A_A" name="setupGame" method="_t2RiIuAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_trhDpOAfEeywYqrNq80A_A" name="startGameThread" method="_t2RiI-AfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_trhqsOAfEeywYqrNq80A_A" name="run" method="_t2RiJOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tri40uAfEeywYqrNq80A_A" name="update" method="_t2RiJeAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_trjf4OAfEeywYqrNq80A_A" name="playMusic" method="_t2SJMuAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_trkG8OAfEeywYqrNq80A_A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_trkuAOAfEeywYqrNq80A_A" name="stopMusic" method="_t2SJNOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_trnKQOAfEeywYqrNq80A_A" name="playSE" method="_t2SJNeAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_trnKQeAfEeywYqrNq80A_A" name="i">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_t0ARQOAfEeywYqrNq80A_A" name="paintComponent" method="_t2SJMOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t0A4UOAfEeywYqrNq80A_A" name="g" type="_tzOOIeAfEeywYqrNq80A_A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3axoOAfEeywYqrNq80A_A" name="" memberEnd="_t3axoeAfEeywYqrNq80A_A _t0y7cOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3axoeAfEeywYqrNq80A_A" name="" type="_tqOqMOAfEeywYqrNq80A_A" association="_t3axoOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3bYseAfEeywYqrNq80A_A" name="" memberEnd="_t3bYsuAfEeywYqrNq80A_A _t00JkOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3bYsuAfEeywYqrNq80A_A" name="" type="_tqS7oOAfEeywYqrNq80A_A" association="_t3bYseAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3cm0OAfEeywYqrNq80A_A" name="" memberEnd="_t3cm0eAfEeywYqrNq80A_A _t01XsOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3cm0eAfEeywYqrNq80A_A" name="" type="_tqZCQOAfEeywYqrNq80A_A" association="_t3cm0OAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3dN4eAfEeywYqrNq80A_A" name="" memberEnd="_t3d08OAfEeywYqrNq80A_A _t01-weAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3d08OAfEeywYqrNq80A_A" name="" type="_tqZCQOAfEeywYqrNq80A_A" association="_t3dN4eAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3fDEeAfEeywYqrNq80A_A" name="" memberEnd="_t3fDEuAfEeywYqrNq80A_A _t0-hoeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3fDEuAfEeywYqrNq80A_A" name="" type="_tqpg8OAfEeywYqrNq80A_A" association="_t3fDEeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3g4QeAfEeywYqrNq80A_A" name="" memberEnd="_t3g4QuAfEeywYqrNq80A_A _t1Bk8OAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3g4QuAfEeywYqrNq80A_A" name="" type="_tqxcwOAfEeywYqrNq80A_A" association="_t3g4QeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3iGYOAfEeywYqrNq80A_A" name="" memberEnd="_t3iGYeAfEeywYqrNq80A_A _t1CzEOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3iGYeAfEeywYqrNq80A_A" name="" type="_tqxcwOAfEeywYqrNq80A_A" association="_t3iGYOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3jUgeAfEeywYqrNq80A_A" name="" memberEnd="_t3jUguAfEeywYqrNq80A_A _t1EBMOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3jUguAfEeywYqrNq80A_A" name="" type="_tq2VQOAfEeywYqrNq80A_A" association="_t3jUgeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3kioeAfEeywYqrNq80A_A" name="" memberEnd="_t3kiouAfEeywYqrNq80A_A _t1EoQeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3kiouAfEeywYqrNq80A_A" name="" type="_tq2VQOAfEeywYqrNq80A_A" association="_t3kioeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3lJseAfEeywYqrNq80A_A" name="" memberEnd="_t3lJsuAfEeywYqrNq80A_A _t1F2YeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3lJsuAfEeywYqrNq80A_A" name="" type="_tq2VQOAfEeywYqrNq80A_A" association="_t3lJseAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3mX0eAfEeywYqrNq80A_A" name="" memberEnd="_t3mX0uAfEeywYqrNq80A_A _t1VG8eAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3mX0uAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3mX0eAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3m-4eAfEeywYqrNq80A_A" name="" memberEnd="_t3m-4uAfEeywYqrNq80A_A _t1VuAeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3m-4uAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3m-4eAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3oNAeAfEeywYqrNq80A_A" name="" memberEnd="_t3oNAuAfEeywYqrNq80A_A _t1W8IOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3oNAuAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3oNAeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3pbIOAfEeywYqrNq80A_A" name="" memberEnd="_t3pbIeAfEeywYqrNq80A_A _t1XjMeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3pbIeAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3pbIOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3qpQOAfEeywYqrNq80A_A" name="" memberEnd="_t3qpQeAfEeywYqrNq80A_A _t1YKQeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3qpQeAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3qpQOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3rQUeAfEeywYqrNq80A_A" name="" memberEnd="_t3rQUuAfEeywYqrNq80A_A _t1YxUeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3rQUuAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3rQUeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3r3YeAfEeywYqrNq80A_A" name="" memberEnd="_t3r3YuAfEeywYqrNq80A_A _t1ZYYeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3r3YuAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3r3YeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3tFgOAfEeywYqrNq80A_A" name="" memberEnd="_t3tFgeAfEeywYqrNq80A_A _t1amgOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3tFgeAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3tFgOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3tskeAfEeywYqrNq80A_A" name="" memberEnd="_t3tskuAfEeywYqrNq80A_A _t1cbsOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3tskuAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3tskeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3uToeAfEeywYqrNq80A_A" name="" memberEnd="_t3uTouAfEeywYqrNq80A_A _t1dCweAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3uTouAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3uToeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3vhweAfEeywYqrNq80A_A" name="" memberEnd="_t3vhwuAfEeywYqrNq80A_A _t1dp0uAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3vhwuAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3vhweAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3wI0eAfEeywYqrNq80A_A" name="" memberEnd="_t3wI0uAfEeywYqrNq80A_A _t1e38eAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3wI0uAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3wI0eAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3xW8eAfEeywYqrNq80A_A" name="" memberEnd="_t3xW8uAfEeywYqrNq80A_A _t1gGEeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3xW8uAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3xW8eAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3x-AeAfEeywYqrNq80A_A" name="" memberEnd="_t3x-AuAfEeywYqrNq80A_A _t1h7QOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3x-AuAfEeywYqrNq80A_A" name="" type="_trYgwOAfEeywYqrNq80A_A" association="_t3x-AeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t4FgAOAfEeywYqrNq80A_A" name="" memberEnd="_t4FgAeAfEeywYqrNq80A_A _t2wqUeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t4FgAeAfEeywYqrNq80A_A" name="" type="_tq2VQOAfEeywYqrNq80A_A" association="_t4FgAOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t4GHEeAfEeywYqrNq80A_A" name="" memberEnd="_t4GHEuAfEeywYqrNq80A_A _t2xRYuAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t4GHEuAfEeywYqrNq80A_A" name="" type="_tq2VQOAfEeywYqrNq80A_A" association="_t4GHEeAfEeywYqrNq80A_A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_tmFKAOAfEeywYqrNq80A_A" name="entity">
      <packagedElement xmi:type="uml:Class" xmi:id="_tpRn8OAfEeywYqrNq80A_A" name="Entity" isAbstract="true">
        <ownedAttribute xmi:id="_t0KCQOAfEeywYqrNq80A_A" name="gp" visibility="package" type="_trYgwOAfEeywYqrNq80A_A" association="_t2_64OAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t0L3cOAfEeywYqrNq80A_A" name="worldX">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0NFkeAfEeywYqrNq80A_A" name="name">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0NsoeAfEeywYqrNq80A_A" name="type">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0OTseAfEeywYqrNq80A_A" name="speed">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0O6weAfEeywYqrNq80A_A" name="direction">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0O6wuAfEeywYqrNq80A_A" value="&quot;none&quot;"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0QI4OAfEeywYqrNq80A_A" name="attacking">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0QI4eAfEeywYqrNq80A_A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0Qv8eAfEeywYqrNq80A_A" name="up1" type="_tyFlseAfEeywYqrNq80A_A" association="_t3BJAOAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t0TMMOAfEeywYqrNq80A_A" name="attackUp1" type="_tyFlseAfEeywYqrNq80A_A" association="_t3BwEeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t0VBYOAfEeywYqrNq80A_A" name="image" type="_tyFlseAfEeywYqrNq80A_A" association="_t3DlQeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t0WPgeAfEeywYqrNq80A_A" name="spriteNum">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0W2kOAfEeywYqrNq80A_A" value="1"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0W2kuAfEeywYqrNq80A_A" name="spriteCounter">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0XdoOAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0k5AeAfEeywYqrNq80A_A" name="standCounter">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0k5AuAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0muMOAfEeywYqrNq80A_A" name="actionLockCounter">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0muMeAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0nVQeAfEeywYqrNq80A_A" name="invincible">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0n8UOAfEeywYqrNq80A_A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0n8UuAfEeywYqrNq80A_A" name="invincibleCounter">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0ojYOAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0pKceAfEeywYqrNq80A_A" name="solidArea" type="_tyEXkeAfEeywYqrNq80A_A" association="_t3XuUeAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0pxgOAfEeywYqrNq80A_A" value="new Rectangle(0, 0, 48, 48)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0qYkOAfEeywYqrNq80A_A" name="solidAreaDefaultX">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0qYkeAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0rmsOAfEeywYqrNq80A_A" name="collisionOn">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0rmseAfEeywYqrNq80A_A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0sNwOAfEeywYqrNq80A_A" name="collision">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0sNweAfEeywYqrNq80A_A" value="false"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0s00OAfEeywYqrNq80A_A" name="attackArea" type="_tyEXkeAfEeywYqrNq80A_A" association="_t3Y8cOAfEeywYqrNq80A_A">
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t0s00eAfEeywYqrNq80A_A" value="new Rectangle(0, 0, 0, 0)"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0tb4eAfEeywYqrNq80A_A" name="maxLife">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0uC8eAfEeywYqrNq80A_A" name="life">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2WaoOAfEeywYqrNq80A_A" name="worldY">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t2XowOAfEeywYqrNq80A_A" name="up2" type="_tyFlseAfEeywYqrNq80A_A" association="_t31oYeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2Y24OAfEeywYqrNq80A_A" name="down1" type="_tyFlseAfEeywYqrNq80A_A" association="_t322gOAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2aFAeAfEeywYqrNq80A_A" name="down2" type="_tyFlseAfEeywYqrNq80A_A" association="_t33dkeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2bTIOAfEeywYqrNq80A_A" name="left1" type="_tyFlseAfEeywYqrNq80A_A" association="_t34EoeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2chQOAfEeywYqrNq80A_A" name="left2" type="_tyFlseAfEeywYqrNq80A_A" association="_t35SwOAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2eWceAfEeywYqrNq80A_A" name="right1" type="_tyFlseAfEeywYqrNq80A_A" association="_t3550eAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2e9guAfEeywYqrNq80A_A" name="right2" type="_tyFlseAfEeywYqrNq80A_A" association="_t37H8OAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2gysOAfEeywYqrNq80A_A" name="attackUp2" type="_tyFlseAfEeywYqrNq80A_A" association="_t37vAeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2iA0eAfEeywYqrNq80A_A" name="attackDown1" type="_tyFlseAfEeywYqrNq80A_A" association="_t389IeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2j2AeAfEeywYqrNq80A_A" name="attackDown2" type="_tyFlseAfEeywYqrNq80A_A" association="_t39kMeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2kdEuAfEeywYqrNq80A_A" name="attackLeft1" type="_tyFlseAfEeywYqrNq80A_A" association="_t3-yUeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2lrMOAfEeywYqrNq80A_A" name="attackLeft2" type="_tyFlseAfEeywYqrNq80A_A" association="_t4AAcOAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2m5UOAfEeywYqrNq80A_A" name="attackRight1" type="_tyFlseAfEeywYqrNq80A_A" association="_t4AngeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2ngYOAfEeywYqrNq80A_A" name="attackRight2" type="_tyFlseAfEeywYqrNq80A_A" association="_t4CcsOAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2oHcOAfEeywYqrNq80A_A" name="image2" type="_tyFlseAfEeywYqrNq80A_A" association="_t4Dq0OAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2pVkOAfEeywYqrNq80A_A" name="image3" type="_tyFlseAfEeywYqrNq80A_A" association="_t4ER4eAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t2p8oOAfEeywYqrNq80A_A" name="solidAreaDefaultY">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t2qjseAfEeywYqrNq80A_A" value="0"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t19ZEOAfEeywYqrNq80A_A" name="Entity" specification="_tyJQEOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t19ZEeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t19ZEuAfEeywYqrNq80A_A" type="_tpRn8OAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>this.gp = gp;&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t1-AIOAfEeywYqrNq80A_A" name="setAction" specification="_tpdOIOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// to be overridden&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t1-AIeAfEeywYqrNq80A_A" name="update" specification="_tpdOIeAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// DIRECTION&#xD;
		setAction();&#xD;
		&#xD;
		// COLLISION&#xD;
		collisionOn = false;&#xD;
		// tile&#xD;
		gp.cChecker.checkTile(this);&#xD;
		// object&#xD;
		gp.cChecker.checkObject(this);&#xD;
		// npc&#xD;
		gp.cChecker.checkEntity(this, gp.npc);&#xD;
		// monster&#xD;
		gp.cChecker.checkEntity(this, gp.monster);&#xD;
		// player&#xD;
		boolean contactPlayer = gp.cChecker.checkPlayer(this);&#xD;
		if (this.type == 3 &amp;&amp; contactPlayer == true) {&#xD;
			&#xD;
			if (gp.player.invincible == false) {&#xD;
				gp.player.life -= 1;&#xD;
				gp.player.invincible = true;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// MOVEMENT&#xD;
		if (collisionOn == false) {&#xD;
			switch (direction) {&#xD;
			case &quot;up&quot;:&#xD;
				worldY -= speed;	// update position&#xD;
				break;&#xD;
			case &quot;down&quot;:&#xD;
				worldY += speed;&#xD;
				break;&#xD;
			case &quot;left&quot;:&#xD;
				worldX -= speed;&#xD;
				break;&#xD;
			case &quot;right&quot;:&#xD;
				worldX += speed;&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// SWITCH SPRITE&#xD;
		spriteCounter++;	// everytime a frame passed, increase the counter&#xD;
		&#xD;
		if (spriteCounter > 10) {&#xD;
			if (spriteNum == 1) {	// change the image&#xD;
				spriteNum = 2;&#xD;
			} else {&#xD;
				spriteNum = 1;&#xD;
			}&#xD;
			&#xD;
			spriteCounter = 0;		// reset counter&#xD;
		}&#xD;
		&#xD;
		// INVINCIBLE TIME&#xD;
		if (invincible == true) {&#xD;
			&#xD;
			invincibleCounter++;&#xD;
			&#xD;
			if (invincibleCounter == 60) {&#xD;
				invincible = false;&#xD;
				invincibleCounter = 0;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t1-AIuAfEeywYqrNq80A_A" name="draw" specification="_tzpr8OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t1-AI-AfEeywYqrNq80A_A" name="g2" type="_tyDwgOAfEeywYqrNq80A_A"/>
          <language>java</language>
          <body>// only draw entity within screen's range around player&#xD;
		if (worldX > gp.player.worldX - gp.player.screenX - gp.tileSize&#xD;
				&amp;&amp; worldX &lt; gp.player.worldX + gp.player.screenX + gp.tileSize&#xD;
				&amp;&amp; worldY > gp.player.worldY - gp.player.screenY - gp.tileSize&#xD;
				&amp;&amp; worldY &lt; gp.player.worldY + gp.player.screenY + gp.tileSize) {&#xD;
				&#xD;
			switch(direction) {&#xD;
			case &quot;up&quot;:&#xD;
				if (spriteNum == 1) {&#xD;
					image = up1;&#xD;
				}&#xD;
				if (spriteNum == 2) {&#xD;
					image = up2;&#xD;
				}&#xD;
				break;&#xD;
			case &quot;down&quot;:&#xD;
				if (spriteNum == 1) {&#xD;
					image = down1;&#xD;
				}&#xD;
				if (spriteNum == 2) {&#xD;
					image = down2;&#xD;
				}&#xD;
				break;&#xD;
			case &quot;left&quot;:&#xD;
				if (spriteNum == 1) {&#xD;
					image = left1;&#xD;
				}&#xD;
				if (spriteNum == 2) {&#xD;
					image = left2;&#xD;
				}&#xD;
				break;&#xD;
			case &quot;right&quot;:&#xD;
				if (spriteNum == 1) {&#xD;
					image = right1;&#xD;
				}&#xD;
				if (spriteNum == 2) {&#xD;
					image = right2;&#xD;
				}&#xD;
				break;&#xD;
			}&#xD;
			&#xD;
			// position on screen where we draw entity&#xD;
			int screenX = worldX - gp.player.worldX + gp.player.screenX;&#xD;
			int screenY = worldY - gp.player.worldY + gp.player.screenY;&#xD;
			&#xD;
			// INVINCIBLE VISUAL EFFECT&#xD;
			if (invincible == true) {&#xD;
				g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5F));&#xD;
			}&#xD;
			&#xD;
			g2.drawImage(image, screenX, screenY, gp.tileSize, gp.tileSize, null);&#xD;
			&#xD;
			// RESET ALPHA&#xD;
			g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1F));&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tpdOIOAfEeywYqrNq80A_A" name="setAction" method="_t1-AIOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tpdOIeAfEeywYqrNq80A_A" name="update" method="_t1-AIeAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tyJQEOAfEeywYqrNq80A_A" name="Entity" method="_t19ZEOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tyJQEuAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tyJ3IOAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tyJQEeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tyJ3IeAfEeywYqrNq80A_A" type="_tpRn8OAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tzpr8OAfEeywYqrNq80A_A" name="draw" method="_t1-AIuAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tzqTAOAfEeywYqrNq80A_A" name="g2" type="_tyDwgOAfEeywYqrNq80A_A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tqAAsOAfEeywYqrNq80A_A" name="NPC_OldMan">
        <generalization xmi:id="_tySaAuAfEeywYqrNq80A_A" general="_tpRn8OAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t1_1UOAfEeywYqrNq80A_A" name="NPC_OldMan" specification="_tyRy8OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t1_1UeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t1_1UuAfEeywYqrNq80A_A" type="_tqAAsOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>super(gp);&#xD;
		&#xD;
		// INFO&#xD;
		speed = 1;&#xD;
		direction = &quot;down&quot;;&#xD;
		&#xD;
		// SOLID AREA&#xD;
		solidArea.x = 8;&#xD;
		solidArea.y = 16;&#xD;
		solidArea.width = 32;&#xD;
		solidArea.height = 32;&#xD;
		solidAreaDefaultX = solidArea.x;&#xD;
		solidAreaDefaultY = solidArea.y;&#xD;
		&#xD;
		// IMAGE&#xD;
		getImage();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t1_1U-AfEeywYqrNq80A_A" name="getImage" specification="_tqBO0OAfEeywYqrNq80A_A">
          <language>java</language>
          <body>try {&#xD;
			up1 = ImageIO.read(getClass().getResourceAsStream(&quot;/npc/oldman_up_1.png&quot;));&#xD;
			up2 = ImageIO.read(getClass().getResourceAsStream(&quot;/npc/oldman_up_2.png&quot;));&#xD;
			down1 = ImageIO.read(getClass().getResourceAsStream(&quot;/npc/oldman_down_1.png&quot;));&#xD;
			down2 = ImageIO.read(getClass().getResourceAsStream(&quot;/npc/oldman_down_2.png&quot;));&#xD;
			left1 = ImageIO.read(getClass().getResourceAsStream(&quot;/npc/oldman_left_1.png&quot;));&#xD;
			left2 = ImageIO.read(getClass().getResourceAsStream(&quot;/npc/oldman_left_2.png&quot;));&#xD;
			right1 = ImageIO.read(getClass().getResourceAsStream(&quot;/npc/oldman_right_1.png&quot;));&#xD;
			right2 = ImageIO.read(getClass().getResourceAsStream(&quot;/npc/oldman_right_2.png&quot;));&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t1_1VOAfEeywYqrNq80A_A" name="setAction" specification="_tqB14OAfEeywYqrNq80A_A">
          <language>java</language>
          <body>if (actionLockCounter == 0) {&#xD;
		&#xD;
			Random random = new Random();&#xD;
			int i = random.nextInt(100) + 1;	// get a number between 1 and 100 randomly&#xD;
			&#xD;
			if (i &lt;= 25) {&#xD;
				direction = &quot;up&quot;;&#xD;
			}&#xD;
			&#xD;
			if (25 &lt; i &amp;&amp; i &lt;= 50) {&#xD;
				direction = &quot;down&quot;;&#xD;
			}&#xD;
			&#xD;
			if (50 &lt; i &amp;&amp; i &lt;= 75) {&#xD;
				direction = &quot;left&quot;;&#xD;
			}&#xD;
			&#xD;
			if (75 &lt; i) {&#xD;
				direction = &quot;right&quot;;&#xD;
			}&#xD;
			&#xD;
			actionLockCounter = 120;&#xD;
		}&#xD;
		&#xD;
		actionLockCounter--;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tqBO0OAfEeywYqrNq80A_A" name="getImage" method="_t1_1U-AfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tqB14OAfEeywYqrNq80A_A" name="setAction" method="_t1_1VOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tyRy8OAfEeywYqrNq80A_A" name="NPC_OldMan" method="_t1_1UOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tyRy8uAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tySaAOAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tyRy8eAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tySaAeAfEeywYqrNq80A_A" type="_tqAAsOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tqDrEOAfEeywYqrNq80A_A" name="Player">
        <generalization xmi:id="_tyX5kOAfEeywYqrNq80A_A" general="_tpRn8OAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t0wfMOAfEeywYqrNq80A_A" name="keyH" visibility="package" type="_tqpg8OAfEeywYqrNq80A_A" association="_t3ZjgeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t0xGQeAfEeywYqrNq80A_A" name="screenX" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t0xtUeAfEeywYqrNq80A_A" name="screenY" isLeaf="true" isReadOnly="true">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2AcYOAfEeywYqrNq80A_A" name="Player" specification="_tyVdUOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2AcYeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2AcYuAfEeywYqrNq80A_A" name="keyH" type="_tqpg8OAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2AcY-AfEeywYqrNq80A_A" type="_tqDrEOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>super(gp);&#xD;
		this.keyH = keyH;&#xD;
		&#xD;
		// INFO&#xD;
		setDefaultValue();&#xD;
		// lấy vị trí chính giữa của cửa sổ game, nhưng vị trí này được dùng làm vị trí trái trên&#xD;
		// nên khi vẽ player, nên phải trừ đi 1 nửa tile size&#xD;
		// để player được vẽ ở vị trí chính giữa của cửa sổ game&#xD;
		screenX = (gp.screenWidth / 2) - (gp.tileSize / 2);	&#xD;
		screenY = (gp.screenHeight / 2) - (gp.tileSize / 2);&#xD;
		&#xD;
		// SOLID AREA&#xD;
		solidArea.x = 8;&#xD;
		solidArea.y = 16;&#xD;
		solidArea.width = 32;&#xD;
		solidArea.height = 32;&#xD;
		solidAreaDefaultX = solidArea.x;&#xD;
		solidAreaDefaultY = solidArea.y;&#xD;
		&#xD;
		// ATTACK AREA&#xD;
		attackArea.width = 36;&#xD;
		attackArea.height = 36;&#xD;
		&#xD;
		// IMAGE&#xD;
		getImage();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2AcZOAfEeywYqrNq80A_A" name="setDefaultValue" specification="_tqFgQOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// default value for player&#xD;
		worldX = gp.tileSize * 23;&#xD;
		worldY = gp.tileSize * 21;&#xD;
		speed = 6;&#xD;
		direction = &quot;down&quot;;&#xD;
		// player status(27/05/2022)&#xD;
		maxLife = 6;&#xD;
		life = maxLife; // 2 life = 1 heart&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2AcZeAfEeywYqrNq80A_A" name="getImage" specification="_tqGuYOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>try {&#xD;
			// WALKING&#xD;
			up1 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_up_1.png&quot;));&#xD;
			up2 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_up_2.png&quot;));&#xD;
			down1 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_down_1.png&quot;));&#xD;
			down2 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_down_2.png&quot;));&#xD;
			left1 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_left_1.png&quot;));&#xD;
			left2 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_left_2.png&quot;));&#xD;
			right1 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_right_1.png&quot;));&#xD;
			right2 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_right_2.png&quot;));&#xD;
			&#xD;
			// ATTACKING&#xD;
			attackUp1 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_attack_up_1.png&quot;));&#xD;
			attackUp2 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_attack_up_2.png&quot;));&#xD;
			attackDown1 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_attack_down_1.png&quot;));&#xD;
			attackDown2 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_attack_down_2.png&quot;));&#xD;
			attackLeft1 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_attack_left_1.png&quot;));&#xD;
			attackLeft2 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_attack_left_2.png&quot;));&#xD;
			attackRight1 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_attack_right_1.png&quot;));&#xD;
			attackRight2 = ImageIO.read(getClass().getResourceAsStream(&quot;/player/boy_attack_right_2.png&quot;));&#xD;
		} catch(IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2AcZuAfEeywYqrNq80A_A" name="update" specification="_tqGuYeAfEeywYqrNq80A_A">
          <language>java</language>
          <body>// INTERACT KEYS&#xD;
		if (keyH.enterPressed == true) {&#xD;
			&#xD;
			// INTERACT WITH NPC&#xD;
			int npcIndex = gp.cChecker.checkEntity(this, gp.npc);&#xD;
			boolean interactWithNPC = interactNPC(npcIndex);&#xD;
			&#xD;
			// ATTACKING&#xD;
			if (interactWithNPC == false) {&#xD;
				attacking = true;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// ATTACKING&#xD;
		if (attacking == true) {&#xD;
			attacking();&#xD;
		}&#xD;
		// MOVEMENT KEYS&#xD;
		else if (keyH.upPressed == true || keyH.downPressed == true || &#xD;
				keyH.leftPressed == true || keyH.rightPressed == true) {&#xD;
			&#xD;
			// DIRECTION&#xD;
			if (keyH.upPressed == true) {&#xD;
				direction = &quot;up&quot;;	// update direction&#xD;
			}&#xD;
			else if (keyH.downPressed == true) {&#xD;
				direction = &quot;down&quot;;&#xD;
			}&#xD;
			else if (keyH.leftPressed == true) {&#xD;
				direction = &quot;left&quot;;&#xD;
			}&#xD;
			else if (keyH.rightPressed == true) {&#xD;
				direction = &quot;right&quot;;&#xD;
			}&#xD;
			&#xD;
			// COLLISION&#xD;
			collisionOn = false;	// reset collision status&#xD;
			// tile&#xD;
			gp.cChecker.checkTile(this);&#xD;
			// object&#xD;
			int objectIndex = gp.cChecker.checkObject(this);&#xD;
			pickUpObject(objectIndex);&#xD;
			// npc&#xD;
			gp.cChecker.checkEntity(this, gp.npc);&#xD;
			// monster&#xD;
			int monsterIndex = gp.cChecker.checkEntity(this, gp.monster);&#xD;
			interactMonster(monsterIndex);&#xD;
			&#xD;
			// EVENT&#xD;
			gp.eHandler.checkEvent();&#xD;
			&#xD;
//			// RESET&#xD;
//			gp.keyH.enterPressed = false;&#xD;
			&#xD;
			// MOVEMENT&#xD;
			// if collisionOn is false, player can move&#xD;
			if (collisionOn == false) {&#xD;
				switch (direction) {&#xD;
				case &quot;up&quot;:&#xD;
					worldY -= speed;	// update position&#xD;
					break;&#xD;
				case &quot;down&quot;:&#xD;
					worldY += speed;&#xD;
					break;&#xD;
				case &quot;left&quot;:&#xD;
					worldX -= speed;&#xD;
					break;&#xD;
				case &quot;right&quot;:&#xD;
					worldX += speed;&#xD;
					break;&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			// SWITCH SPRITE&#xD;
			spriteCounter++;	// everytime a frame passed, increase the counter&#xD;
			&#xD;
			if (spriteCounter > 10) {&#xD;
				&#xD;
				if (spriteNum == 1) {	// change the image&#xD;
					spriteNum = 2;&#xD;
				} else {&#xD;
					spriteNum = 1;&#xD;
				}&#xD;
				&#xD;
				spriteCounter = 0;		// reset counter&#xD;
			}&#xD;
		} else {&#xD;
			// STAND SPRITE&#xD;
			// switch to stand still animation when no key is pressed&#xD;
			standCounter++;&#xD;
			&#xD;
			if (standCounter == 20) {&#xD;
				spriteNum = 1;&#xD;
				standCounter = 0;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// INVINCIBLE TIME&#xD;
		if (invincible == true) {&#xD;
			&#xD;
			invincibleCounter++;&#xD;
			&#xD;
			if (invincibleCounter == 60) {&#xD;
				invincible = false;&#xD;
				invincibleCounter = 0;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2AcZ-AfEeywYqrNq80A_A" name="attacking" specification="_tqGuYuAfEeywYqrNq80A_A">
          <language>java</language>
          <body>spriteCounter++;&#xD;
		&#xD;
		if (spriteCounter &lt;= 5) {&#xD;
			spriteNum = 1;&#xD;
		}&#xD;
		&#xD;
		if (5 &lt; spriteCounter &amp;&amp; spriteCounter &lt;= 25) {&#xD;
			spriteNum = 2;&#xD;
			&#xD;
			// save player's worldX, worldY and solidArea&#xD;
			int currentWorldX = worldX;&#xD;
			int currentWorldY = worldY;&#xD;
			int solidAreaWidth = solidArea.width;&#xD;
			int solidAreaHeight = solidArea.height;&#xD;
			&#xD;
			// adjust player's worldX, worldY to represent attackArea's&#xD;
			switch (direction) {&#xD;
			case &quot;up&quot;: worldY -= attackArea.height; break;&#xD;
			case &quot;down&quot;: worldY += attackArea.height; break;&#xD;
			case &quot;left&quot;: worldX -= attackArea.width; break;&#xD;
			case &quot;right&quot;: worldX += attackArea.width; break;&#xD;
			}&#xD;
			&#xD;
			// adjust player's solidArea to represent attackArea&#xD;
			solidArea.width = attackArea.width;&#xD;
			solidArea.height = attackArea.height;&#xD;
			&#xD;
			// check collision between player's attackArea and monster's solidArea&#xD;
			int monsterIndex = gp.cChecker.checkEntity(this, gp.monster);&#xD;
			damageMonster(monsterIndex);&#xD;
			&#xD;
			// restore player's worldX, worldY and solidArea&#xD;
			worldX = currentWorldX;&#xD;
			worldY = currentWorldY;&#xD;
			solidArea.width = solidAreaWidth;&#xD;
			solidArea.height = solidAreaHeight;&#xD;
		}&#xD;
		&#xD;
		if (25 &lt; spriteCounter) {&#xD;
			spriteNum = 1;&#xD;
			spriteCounter = 0;&#xD;
			attacking = false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2BDcOAfEeywYqrNq80A_A" name="draw" specification="_tzt9YOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2BDceAfEeywYqrNq80A_A" name="g2" type="_tyDwgOAfEeywYqrNq80A_A"/>
          <language>java</language>
          <body>// GET IMAGE&#xD;
		switch(direction) {&#xD;
		case &quot;up&quot;:&#xD;
			if (attacking == false) {&#xD;
				if (spriteNum == 1) { image = up1; }&#xD;
				if (spriteNum == 2) { image = up2; }&#xD;
			}&#xD;
			if (attacking == true) {&#xD;
				if (spriteNum == 1) { image = attackUp1; }&#xD;
				if (spriteNum == 2) { image = attackUp2; }&#xD;
			}&#xD;
			break;&#xD;
		case &quot;down&quot;:&#xD;
			if (attacking == false) {&#xD;
				if (spriteNum == 1) { image = down1; }&#xD;
				if (spriteNum == 2) { image = down2; }&#xD;
			}&#xD;
			if (attacking == true) {&#xD;
				if (spriteNum == 1) { image = attackDown1; }&#xD;
				if (spriteNum == 2) { image = attackDown2; }&#xD;
			}&#xD;
			break;&#xD;
		case &quot;left&quot;:&#xD;
			if (attacking == false) {&#xD;
				if (spriteNum == 1) { image = left1; }&#xD;
				if (spriteNum == 2) { image = left2; }&#xD;
			}&#xD;
			if (attacking == true) {&#xD;
				if (spriteNum == 1) { image = attackLeft1; }&#xD;
				if (spriteNum == 2) { image = attackLeft2; }&#xD;
			}&#xD;
			break;&#xD;
		case &quot;right&quot;:&#xD;
			if (attacking == false) {&#xD;
				if (spriteNum == 1) { image = right1; }&#xD;
				if (spriteNum == 2) { image = right2; }&#xD;
			}&#xD;
			if (attacking == true) {&#xD;
				if (spriteNum == 1) { image = attackRight1; }&#xD;
				if (spriteNum == 2) { image = attackRight2; }&#xD;
			}&#xD;
			break;&#xD;
		}&#xD;
		&#xD;
		// INVINCIBLE VISUAL EFFECT&#xD;
		if (invincible == true) {&#xD;
			g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5F));&#xD;
		}&#xD;
		&#xD;
		// DRAW&#xD;
		if (attacking == false) {&#xD;
		&#xD;
			g2.drawImage(image, screenX, screenY, gp.tileSize, gp.tileSize, null);&#xD;
		}&#xD;
		if (attacking == true) {&#xD;
			&#xD;
			switch (direction) {&#xD;
			case &quot;up&quot;:&#xD;
				g2.drawImage(image, screenX, screenY - gp.tileSize, gp.tileSize, gp.tileSize * 2, null);&#xD;
				break;&#xD;
			case &quot;down&quot;:&#xD;
				g2.drawImage(image, screenX, screenY, gp.tileSize, gp.tileSize * 2, null);&#xD;
				break;&#xD;
			case &quot;left&quot;:&#xD;
				g2.drawImage(image, screenX - gp.tileSize, screenY, gp.tileSize * 2, gp.tileSize, null);&#xD;
				break;&#xD;
			case &quot;right&quot;:&#xD;
				g2.drawImage(image, screenX, screenY, gp.tileSize * 2, gp.tileSize, null);&#xD;
				break;&#xD;
			}&#xD;
		}&#xD;
		&#xD;
		// RESET ALPHA&#xD;
		g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 1F));&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2BqgOAfEeywYqrNq80A_A" name="pickUpObject" specification="_tqHVcOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2BqgeAfEeywYqrNq80A_A" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if (index != 999) {&#xD;
			&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2BqguAfEeywYqrNq80A_A" name="interactNPC" specification="_tqIjkOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2Bqg-AfEeywYqrNq80A_A" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_t2BqhOAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
          <language>java</language>
          <body>if (index != 999) {&#xD;
			&#xD;
			if (gp.keyH.enterPressed == true) {&#xD;
				gp.gameState = gp.dialogueState;&#xD;
				// npc speaks&#xD;
				gp.ui.currentDialogue = &quot;Hello!&quot;;&#xD;
			}&#xD;
			&#xD;
			return true;&#xD;
		} else {&#xD;
			&#xD;
			return false;&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2CRkOAfEeywYqrNq80A_A" name="interactMonster" specification="_tqKYwOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2CRkeAfEeywYqrNq80A_A" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if (index != 999) {&#xD;
			&#xD;
			if (invincible == false) {&#xD;
				life--;&#xD;
				invincible = true;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2CRkuAfEeywYqrNq80A_A" name="damageMonster" specification="_tqLm4OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2CRk-AfEeywYqrNq80A_A" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <language>java</language>
          <body>if (index != 999) {&#xD;
			&#xD;
			if (gp.monster[index].invincible == false) {&#xD;
				&#xD;
				gp.monster[index].life -= 1;&#xD;
				gp.monster[index].invincible = true;&#xD;
				&#xD;
				if (gp.monster[index].life &lt;= 0) {&#xD;
					gp.monster[index] = null;&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tqFgQOAfEeywYqrNq80A_A" name="setDefaultValue" method="_t2AcZOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tqGuYOAfEeywYqrNq80A_A" name="getImage" method="_t2AcZeAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tqGuYeAfEeywYqrNq80A_A" name="update" method="_t2AcZuAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tqGuYuAfEeywYqrNq80A_A" name="attacking" method="_t2AcZ-AfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tqHVcOAfEeywYqrNq80A_A" name="pickUpObject" method="_t2BqgOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqHVceAfEeywYqrNq80A_A" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tqIjkOAfEeywYqrNq80A_A" name="interactNPC" method="_t2BqguAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqIjkeAfEeywYqrNq80A_A" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
          <ownedParameter xmi:id="_tqJKoOAfEeywYqrNq80A_A" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tqKYwOAfEeywYqrNq80A_A" name="interactMonster" method="_t2CRkOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqKYweAfEeywYqrNq80A_A" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tqLm4OAfEeywYqrNq80A_A" name="damageMonster" method="_t2CRkuAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tqLm4eAfEeywYqrNq80A_A" name="index">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tyVdUOAfEeywYqrNq80A_A" name="Player" method="_t2AcYOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tyWEYuAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tyWEY-AfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tyWEYOAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tyWEYeAfEeywYqrNq80A_A" name="keyH" type="_tqpg8OAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tyWEZOAfEeywYqrNq80A_A" type="_tqDrEOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_tzt9YOAfEeywYqrNq80A_A" name="draw" method="_t2BDcOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tzt9YeAfEeywYqrNq80A_A" name="g2" type="_tyDwgOAfEeywYqrNq80A_A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t2_64OAfEeywYqrNq80A_A" name="" memberEnd="_t2_64eAfEeywYqrNq80A_A _t0KCQOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t2_64eAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t2_64OAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3BJAOAfEeywYqrNq80A_A" name="" memberEnd="_t3BJAeAfEeywYqrNq80A_A _t0Qv8eAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3BJAeAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3BJAOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3BwEeAfEeywYqrNq80A_A" name="" memberEnd="_t3BwEuAfEeywYqrNq80A_A _t0TMMOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3BwEuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3BwEeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3DlQeAfEeywYqrNq80A_A" name="" memberEnd="_t3DlQuAfEeywYqrNq80A_A _t0VBYOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3DlQuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3DlQeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3XuUeAfEeywYqrNq80A_A" name="" memberEnd="_t3XuUuAfEeywYqrNq80A_A _t0pKceAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3XuUuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3XuUeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3Y8cOAfEeywYqrNq80A_A" name="" memberEnd="_t3Y8ceAfEeywYqrNq80A_A _t0s00OAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3Y8ceAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3Y8cOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3ZjgeAfEeywYqrNq80A_A" name="" memberEnd="_t3ZjguAfEeywYqrNq80A_A _t0wfMOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3ZjguAfEeywYqrNq80A_A" name="" type="_tqDrEOAfEeywYqrNq80A_A" association="_t3ZjgeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t31oYeAfEeywYqrNq80A_A" name="" memberEnd="_t31oYuAfEeywYqrNq80A_A _t2XowOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t31oYuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t31oYeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t322gOAfEeywYqrNq80A_A" name="" memberEnd="_t322geAfEeywYqrNq80A_A _t2Y24OAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t322geAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t322gOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t33dkeAfEeywYqrNq80A_A" name="" memberEnd="_t33dkuAfEeywYqrNq80A_A _t2aFAeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t33dkuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t33dkeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t34EoeAfEeywYqrNq80A_A" name="" memberEnd="_t34EouAfEeywYqrNq80A_A _t2bTIOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t34EouAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t34EoeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t35SwOAfEeywYqrNq80A_A" name="" memberEnd="_t35SweAfEeywYqrNq80A_A _t2chQOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t35SweAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t35SwOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3550eAfEeywYqrNq80A_A" name="" memberEnd="_t3550uAfEeywYqrNq80A_A _t2eWceAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3550uAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3550eAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t37H8OAfEeywYqrNq80A_A" name="" memberEnd="_t37H8eAfEeywYqrNq80A_A _t2e9guAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t37H8eAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t37H8OAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t37vAeAfEeywYqrNq80A_A" name="" memberEnd="_t37vAuAfEeywYqrNq80A_A _t2gysOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t37vAuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t37vAeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t389IeAfEeywYqrNq80A_A" name="" memberEnd="_t389IuAfEeywYqrNq80A_A _t2iA0eAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t389IuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t389IeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t39kMeAfEeywYqrNq80A_A" name="" memberEnd="_t39kMuAfEeywYqrNq80A_A _t2j2AeAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t39kMuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t39kMeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3-yUeAfEeywYqrNq80A_A" name="" memberEnd="_t3-yUuAfEeywYqrNq80A_A _t2kdEuAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3-yUuAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t3-yUeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t4AAcOAfEeywYqrNq80A_A" name="" memberEnd="_t4AAceAfEeywYqrNq80A_A _t2lrMOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t4AAceAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t4AAcOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t4AngeAfEeywYqrNq80A_A" name="" memberEnd="_t4AnguAfEeywYqrNq80A_A _t2m5UOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t4AnguAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t4AngeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t4CcsOAfEeywYqrNq80A_A" name="" memberEnd="_t4CcseAfEeywYqrNq80A_A _t2ngYOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t4CcseAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t4CcsOAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t4Dq0OAfEeywYqrNq80A_A" name="" memberEnd="_t4Dq0eAfEeywYqrNq80A_A _t2oHcOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t4Dq0eAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t4Dq0OAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t4ER4eAfEeywYqrNq80A_A" name="" memberEnd="_t4ER4uAfEeywYqrNq80A_A _t2pVkOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t4ER4uAfEeywYqrNq80A_A" name="" type="_tpRn8OAfEeywYqrNq80A_A" association="_t4ER4eAfEeywYqrNq80A_A"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_tmPiEOAfEeywYqrNq80A_A" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_tmQwMOAfEeywYqrNq80A_A" name="imageio">
        <packagedElement xmi:type="uml:Class" xmi:id="_tyPWseAfEeywYqrNq80A_A" name="ImageIO"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_tmy7sOAfEeywYqrNq80A_A" name="swing">
        <packagedElement xmi:type="uml:Class" xmi:id="_tyoYQOAfEeywYqrNq80A_A" name="JFrame"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_tzSfkeAfEeywYqrNq80A_A" name="JPanel"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_tm0w4eAfEeywYqrNq80A_A" name="sound">
        <packagedElement xmi:type="uml:Package" xmi:id="_tm0w4uAfEeywYqrNq80A_A" name="sampled">
          <packagedElement xmi:type="uml:Class" xmi:id="_tyqNceAfEeywYqrNq80A_A" name="AudioInputStream"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_tyq0geAfEeywYqrNq80A_A" name="AudioSystem"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_tyspseAfEeywYqrNq80A_A" name="Clip"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_tmZTEOAfEeywYqrNq80A_A" name="monster">
      <packagedElement xmi:type="uml:Class" xmi:id="_trKeUOAfEeywYqrNq80A_A" name="MON_GreenSlime">
        <generalization xmi:id="_ty4P4OAfEeywYqrNq80A_A" general="_tpRn8OAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2N3wOAfEeywYqrNq80A_A" name="MON_GreenSlime" specification="_ty3BwOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2N3weAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2N3wuAfEeywYqrNq80A_A" type="_trKeUOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>super(gp);&#xD;
		&#xD;
		// INFO&#xD;
		name = &quot;Green Slime&quot;;&#xD;
		speed = 1;&#xD;
		maxLife = 4;&#xD;
		life = maxLife;&#xD;
		type = 3;&#xD;
		&#xD;
		// SOLID AREA&#xD;
		solidArea.x = 3;&#xD;
		solidArea.y = 18;&#xD;
		solidArea.width = 42;&#xD;
		solidArea.height = 30;&#xD;
		solidAreaDefaultX = solidArea.x;&#xD;
		solidAreaDefaultY = solidArea.y;&#xD;
		&#xD;
		// IMAGE&#xD;
		getImage();&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2PF4OAfEeywYqrNq80A_A" name="getImage" specification="_trLscOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>try {&#xD;
			up1 = ImageIO.read(getClass().getResourceAsStream(&quot;/monster/greenslime_down_1.png&quot;));&#xD;
			up2 = ImageIO.read(getClass().getResourceAsStream(&quot;/monster/greenslime_down_2.png&quot;));&#xD;
			down1 = ImageIO.read(getClass().getResourceAsStream(&quot;/monster/greenslime_down_1.png&quot;));&#xD;
			down2 = ImageIO.read(getClass().getResourceAsStream(&quot;/monster/greenslime_down_2.png&quot;));&#xD;
			left1 = ImageIO.read(getClass().getResourceAsStream(&quot;/monster/greenslime_down_1.png&quot;));&#xD;
			left2 = ImageIO.read(getClass().getResourceAsStream(&quot;/monster/greenslime_down_2.png&quot;));&#xD;
			right1 = ImageIO.read(getClass().getResourceAsStream(&quot;/monster/greenslime_down_1.png&quot;));&#xD;
			right2 = ImageIO.read(getClass().getResourceAsStream(&quot;/monster/greenslime_down_2.png&quot;));&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2PF4eAfEeywYqrNq80A_A" name="setAction" specification="_trLsceAfEeywYqrNq80A_A">
          <language>java</language>
          <body>if (actionLockCounter == 0) {&#xD;
			&#xD;
			Random random = new Random();&#xD;
			int i = random.nextInt(100) + 1;	// get a number between 1 and 100 randomly&#xD;
			&#xD;
			if (i &lt;= 25) {&#xD;
				direction = &quot;up&quot;;&#xD;
			}&#xD;
			&#xD;
			if (25 &lt; i &amp;&amp; i &lt;= 50) {&#xD;
				direction = &quot;down&quot;;&#xD;
			}&#xD;
			&#xD;
			if (50 &lt; i &amp;&amp; i &lt;= 75) {&#xD;
				direction = &quot;left&quot;;&#xD;
			}&#xD;
			&#xD;
			if (75 &lt; i) {&#xD;
				direction = &quot;right&quot;;&#xD;
			}&#xD;
			&#xD;
			actionLockCounter = 120;&#xD;
		}&#xD;
		&#xD;
		actionLockCounter--;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_trLscOAfEeywYqrNq80A_A" name="getImage" method="_t2PF4OAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_trLsceAfEeywYqrNq80A_A" name="setAction" method="_t2PF4eAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_ty3BwOAfEeywYqrNq80A_A" name="MON_GreenSlime" method="_t2N3wOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_ty3o0OAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ty3o0eAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_ty3BweAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_ty3o0uAfEeywYqrNq80A_A" type="_trKeUOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_tmZTEeAfEeywYqrNq80A_A" name="object">
      <packagedElement xmi:type="uml:Class" xmi:id="_trM6kOAfEeywYqrNq80A_A" name="OBJ_Boots">
        <generalization xmi:id="_ty5eAuAfEeywYqrNq80A_A" general="_tpRn8OAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2Ps8OAfEeywYqrNq80A_A" name="OBJ_Boots" specification="_ty428OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2Ps8eAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2Ps8uAfEeywYqrNq80A_A" type="_trM6kOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>super(gp);&#xD;
		&#xD;
		name = &quot;Boots&quot;;&#xD;
		try {&#xD;
			image = ImageIO.read(getClass().getResourceAsStream(&quot;/objects/boots.png&quot;));&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ty428OAfEeywYqrNq80A_A" name="OBJ_Boots" method="_t2Ps8OAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_ty428uAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_ty5eAOAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_ty428eAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_ty5eAeAfEeywYqrNq80A_A" type="_trM6kOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_trOIsOAfEeywYqrNq80A_A" name="OBJ_Chest">
        <generalization xmi:id="_tzIukOAfEeywYqrNq80A_A" general="_tpRn8OAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2Ps8-AfEeywYqrNq80A_A" name="OBJ_Chest" specification="_ty6FEOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2Ps9OAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2Ps9eAfEeywYqrNq80A_A" type="_trOIsOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>super(gp);&#xD;
		&#xD;
		name = &quot;Chest&quot;;&#xD;
		try {&#xD;
			image = ImageIO.read(getClass().getResourceAsStream(&quot;/objects/chest.png&quot;));&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_ty6FEOAfEeywYqrNq80A_A" name="OBJ_Chest" method="_t2Ps8-AfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tzHgceAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tzIHgOAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tzHgcOAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tzIHgeAfEeywYqrNq80A_A" type="_trOIsOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_trP94OAfEeywYqrNq80A_A" name="OBJ_Door">
        <generalization xmi:id="_tzJVo-AfEeywYqrNq80A_A" general="_tpRn8OAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2QUAOAfEeywYqrNq80A_A" name="OBJ_Door" specification="_tzIukeAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2QUAeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2QUAuAfEeywYqrNq80A_A" type="_trP94OAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>super(gp);&#xD;
		&#xD;
		name = &quot;Door&quot;;&#xD;
		try {&#xD;
			image = ImageIO.read(getClass().getResourceAsStream(&quot;/objects/door.png&quot;));&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
		&#xD;
		collision = true;&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tzIukeAfEeywYqrNq80A_A" name="OBJ_Door" method="_t2QUAOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tzJVoOAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tzJVoeAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tzIukuAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tzJVouAfEeywYqrNq80A_A" type="_trP94OAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_trRzEOAfEeywYqrNq80A_A" name="OBJ_Heart">
        <generalization xmi:id="_tzKjwuAfEeywYqrNq80A_A" general="_tpRn8OAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2QUA-AfEeywYqrNq80A_A" name="OBJ_Heart" specification="_tzJ8sOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2QUBOAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2QUBeAfEeywYqrNq80A_A" type="_trRzEOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>super(gp);&#xD;
		&#xD;
		name = &quot;Heart&quot;;&#xD;
		try {&#xD;
			image = ImageIO.read(getClass().getResourceAsStream(&quot;/objects/heart_full.png&quot;));&#xD;
			image2 = ImageIO.read(getClass().getResourceAsStream(&quot;/objects/heart_half.png&quot;));&#xD;
			image3 = ImageIO.read(getClass().getResourceAsStream(&quot;/objects/heart_blank.png&quot;));&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tzJ8sOAfEeywYqrNq80A_A" name="OBJ_Heart" method="_t2QUA-AfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tzJ8suAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tzKjwOAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tzJ8seAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tzKjweAfEeywYqrNq80A_A" type="_trRzEOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_trToQOAfEeywYqrNq80A_A" name="OBJ_Key">
        <generalization xmi:id="_tzLx4-AfEeywYqrNq80A_A" general="_tpRn8OAfEeywYqrNq80A_A"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2Q7EOAfEeywYqrNq80A_A" name="OBJ_Key" specification="_tzLK0OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2Q7EeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2Q7EuAfEeywYqrNq80A_A" type="_trToQOAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>super(gp);&#xD;
		&#xD;
		name = &quot;Key&quot;;&#xD;
		try {&#xD;
			image = ImageIO.read(getClass().getResourceAsStream(&quot;/objects/key.png&quot;));&#xD;
		} catch (IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tzLK0OAfEeywYqrNq80A_A" name="OBJ_Key" method="_t2Q7EOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tzLx4OAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tzLx4eAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tzLK0eAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tzLx4uAfEeywYqrNq80A_A" type="_trToQOAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_tmrm8OAfEeywYqrNq80A_A" name="tile">
      <packagedElement xmi:type="uml:Class" xmi:id="_tqnrwOAfEeywYqrNq80A_A" name="Tile">
        <ownedAttribute xmi:id="_t08scOAfEeywYqrNq80A_A" name="image" type="_tyFlseAfEeywYqrNq80A_A" association="_t3ecAeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t09TgeAfEeywYqrNq80A_A" name="collision">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
          <defaultValue xmi:type="uml:LiteralString" xmi:id="_t09TguAfEeywYqrNq80A_A" value="false"/>
        </ownedAttribute>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_tr3B4OAfEeywYqrNq80A_A" name="TileManager">
        <ownedAttribute xmi:id="_t1p3EOAfEeywYqrNq80A_A" name="gp" visibility="package" type="_trYgwOAfEeywYqrNq80A_A" association="_t3zMIeAfEeywYqrNq80A_A"/>
        <ownedAttribute xmi:id="_t1rFMOAfEeywYqrNq80A_A" name="tile" type="_tqnrwOAfEeywYqrNq80A_A" association="_t3zzMeAfEeywYqrNq80A_A">
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t1rFMeAfEeywYqrNq80A_A" value="*"/>
        </ownedAttribute>
        <ownedAttribute xmi:id="_t15HoOAfEeywYqrNq80A_A" name="mapTileNum">
          <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_t15HoeAfEeywYqrNq80A_A" value="*"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2SwQOAfEeywYqrNq80A_A" name="TileManager" specification="_tzes0OAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2SwQeAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_t2SwQuAfEeywYqrNq80A_A" type="_tr3B4OAfEeywYqrNq80A_A" direction="return"/>
          <language>java</language>
          <body>this.gp = gp;&#xD;
		tile = new Tile[10];	// we have 10 different tiles&#xD;
		mapTileNum = new int[gp.maxWorldCol][gp.maxWorldRow];		// store map&#xD;
		&#xD;
		getTileImage();&#xD;
		loadMap(&quot;/maps/world01.txt&quot;);&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2T-YOAfEeywYqrNq80A_A" name="getTileImage" specification="_tr8hcOAfEeywYqrNq80A_A">
          <language>java</language>
          <body>try {&#xD;
			tile[0] = new Tile();&#xD;
			tile[0].image = ImageIO.read(getClass().getResourceAsStream(&quot;/tiles/grass.png&quot;));&#xD;
			&#xD;
			tile[1] = new Tile();&#xD;
			tile[1].image = ImageIO.read(getClass().getResourceAsStream(&quot;/tiles/wall.png&quot;));&#xD;
			tile[1].collision = true;&#xD;
			&#xD;
			tile[2] = new Tile();&#xD;
			tile[2].image = ImageIO.read(getClass().getResourceAsStream(&quot;/tiles/water.png&quot;));&#xD;
			tile[2].collision = true;&#xD;
			&#xD;
			tile[3] = new Tile();&#xD;
			tile[3].image = ImageIO.read(getClass().getResourceAsStream(&quot;/tiles/earth.png&quot;));&#xD;
			&#xD;
			tile[4] = new Tile();&#xD;
			tile[4].image = ImageIO.read(getClass().getResourceAsStream(&quot;/tiles/tree.png&quot;));&#xD;
			tile[4].collision = true;&#xD;
			&#xD;
			tile[5] = new Tile();&#xD;
			tile[5].image = ImageIO.read(getClass().getResourceAsStream(&quot;/tiles/sand.png&quot;));&#xD;
			&#xD;
		} catch(IOException e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2T-YeAfEeywYqrNq80A_A" name="loadMap" specification="_tr9IgOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2T-YuAfEeywYqrNq80A_A" name="filePath">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
          <language>java</language>
          <body>// read map info from .txt map data file&#xD;
		try {&#xD;
			InputStream is = getClass().getResourceAsStream(filePath);&#xD;
			BufferedReader br = new BufferedReader(new InputStreamReader(is));&#xD;
			&#xD;
			int col = 0;&#xD;
			int row = 0;&#xD;
			&#xD;
			while (col &lt; gp.maxWorldCol &amp;&amp; row &lt; gp.maxWorldRow) {&#xD;
				String line = br.readLine();	// read a single line in text file&#xD;
				&#xD;
				while (col &lt; gp.maxWorldCol) {&#xD;
					String numbers[] = line.split(&quot; &quot;);		// split the string at a space&#xD;
					&#xD;
					int num = Integer.parseInt(numbers[col]);		// convert String to Integer&#xD;
					&#xD;
					mapTileNum[col][row] = num;		// store the tile number&#xD;
					col++;&#xD;
				}&#xD;
				&#xD;
				if (col == gp.maxWorldCol) {	// move to new line&#xD;
					col = 0;&#xD;
					row++;&#xD;
				}&#xD;
			}&#xD;
			&#xD;
			br.close();&#xD;
		} catch(Exception e) {&#xD;
			e.printStackTrace();&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_t2T-Y-AfEeywYqrNq80A_A" name="draw" specification="_t0EisOAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t2T-ZOAfEeywYqrNq80A_A" name="g2" type="_tyDwgOAfEeywYqrNq80A_A"/>
          <language>java</language>
          <body>int worldCol = 0;&#xD;
		int worldRow = 0;&#xD;
		&#xD;
		while (worldCol &lt; gp.maxWorldCol &amp;&amp; worldRow &lt; gp.maxWorldRow) {&#xD;
			int tileNum = mapTileNum[worldCol][worldRow];&#xD;
			&#xD;
			// get the x and y of the tile&#xD;
			int worldX = worldCol * gp.tileSize;&#xD;
			int worldY = worldRow * gp.tileSize;&#xD;
			&#xD;
			// only draw tiles within screen's range around player&#xD;
			if (worldX > gp.player.worldX - gp.player.screenX - gp.tileSize&#xD;
				&amp;&amp; worldX &lt; gp.player.worldX + gp.player.screenX + gp.tileSize&#xD;
				&amp;&amp; worldY > gp.player.worldY - gp.player.screenY - gp.tileSize&#xD;
				&amp;&amp; worldY &lt; gp.player.worldY + gp.player.screenY + gp.tileSize) {&#xD;
				&#xD;
				// vị trí vẽ tile khi lấy player làm gốc&#xD;
				// chú ý rằng player luôn được vẽ ở giữa cửa sổ game,&#xD;
				// nên cần cộng thêm screenX và screenY của player để lấy được tọa độ chính xác&#xD;
				int screenX = worldX - gp.player.worldX + gp.player.screenX;&#xD;
				int screenY = worldY - gp.player.worldY + gp.player.screenY;&#xD;
				&#xD;
				g2.drawImage(tile[tileNum].image, screenX, screenY, gp.tileSize, gp.tileSize, null);&#xD;
			}&#xD;
			&#xD;
			worldCol++;&#xD;
			&#xD;
			if (worldCol == gp.maxWorldCol) {&#xD;
				worldCol = 0;&#xD;
				&#xD;
				worldRow++;&#xD;
			}&#xD;
		}&#xD;
	</body>
        </ownedBehavior>
        <ownedOperation xmi:id="_tr8hcOAfEeywYqrNq80A_A" name="getTileImage" method="_t2T-YOAfEeywYqrNq80A_A"/>
        <ownedOperation xmi:id="_tr9IgOAfEeywYqrNq80A_A" name="loadMap" method="_t2T-YeAfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_tr9IgeAfEeywYqrNq80A_A" name="filePath">
            <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:id="_tzes0OAfEeywYqrNq80A_A" name="TileManager" method="_t2SwQOAfEeywYqrNq80A_A">
          <eAnnotations xmi:id="_tzfT4OAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
            <details xmi:id="_tzfT4eAfEeywYqrNq80A_A" key="create"/>
          </eAnnotations>
          <ownedParameter xmi:id="_tzes0eAfEeywYqrNq80A_A" name="gp" type="_trYgwOAfEeywYqrNq80A_A"/>
          <ownedParameter xmi:id="_tzfT4uAfEeywYqrNq80A_A" type="_tr3B4OAfEeywYqrNq80A_A" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:id="_t0EisOAfEeywYqrNq80A_A" name="draw" method="_t2T-Y-AfEeywYqrNq80A_A">
          <ownedParameter xmi:id="_t0FJwOAfEeywYqrNq80A_A" name="g2" type="_tyDwgOAfEeywYqrNq80A_A"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3ecAeAfEeywYqrNq80A_A" name="" memberEnd="_t3ecAuAfEeywYqrNq80A_A _t08scOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3ecAuAfEeywYqrNq80A_A" name="" type="_tqnrwOAfEeywYqrNq80A_A" association="_t3ecAeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3zMIeAfEeywYqrNq80A_A" name="" memberEnd="_t3zMIuAfEeywYqrNq80A_A _t1p3EOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3zMIuAfEeywYqrNq80A_A" name="" type="_tr3B4OAfEeywYqrNq80A_A" association="_t3zMIeAfEeywYqrNq80A_A"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_t3zzMeAfEeywYqrNq80A_A" name="" memberEnd="_t3zzMuAfEeywYqrNq80A_A _t1rFMOAfEeywYqrNq80A_A">
        <ownedEnd xmi:id="_t3zzMuAfEeywYqrNq80A_A" name="" type="_tr3B4OAfEeywYqrNq80A_A" association="_t3zzMeAfEeywYqrNq80A_A"/>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_tKLRIOAfEeywYqrNq80A_A">
      <eAnnotations xmi:id="_tKL4MOAfEeywYqrNq80A_A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_tKMfQOAfEeywYqrNq80A_A" base_Package="_s-8RgOAfEeywYqrNq80A_A">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_triRwOAfEeywYqrNq80A_A" base_Element="_trhqsOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Annotations xmi:id="_tri40OAfEeywYqrNq80A_A" base_Element="_trhqsOAfEeywYqrNq80A_A">
    <annotations xmi:id="_tri40eAfEeywYqrNq80A_A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tyCiYOAfEeywYqrNq80A_A" base_Element="_tyBUQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyEXkOAfEeywYqrNq80A_A" base_Element="_tyDwgOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyFlsOAfEeywYqrNq80A_A" base_Element="_tyEXkeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyGMwOAfEeywYqrNq80A_A" base_Element="_tyFlseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyOvoOAfEeywYqrNq80A_A" base_Element="_tyOIkOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyPWsOAfEeywYqrNq80A_A" base_Element="_tyOvoeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyQk0OAfEeywYqrNq80A_A" base_Element="_tyPWseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyUPMOAfEeywYqrNq80A_A" base_Element="_tyToIOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyjfwOAfEeywYqrNq80A_A" base_Element="_tyi4sOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tylU8OAfEeywYqrNq80A_A" base_Element="_tykG0OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyo_UOAfEeywYqrNq80A_A" base_Element="_tyoYQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyqNcOAfEeywYqrNq80A_A" base_Element="_typmYOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyq0gOAfEeywYqrNq80A_A" base_Element="_tyqNceAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyspsOAfEeywYqrNq80A_A" base_Element="_tyq0geAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tytQwOAfEeywYqrNq80A_A" base_Element="_tyspseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyw7IOAfEeywYqrNq80A_A" base_Element="_tyue4OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyyJQOAfEeywYqrNq80A_A" base_Element="_tyw7IeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tyywUOAfEeywYqrNq80A_A" base_Element="_tyyJQeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzOOIOAfEeywYqrNq80A_A" base_Element="_tzNAAOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzPcQOAfEeywYqrNq80A_A" base_Element="_tzOOIeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzQqYOAfEeywYqrNq80A_A" base_Element="_tzPcQeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzRRcOAfEeywYqrNq80A_A" base_Element="_tzQqYeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzSfkOAfEeywYqrNq80A_A" base_Element="_tzRRceAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzTGoOAfEeywYqrNq80A_A" base_Element="_tzSfkeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzc3oOAfEeywYqrNq80A_A" base_Element="_tzbpgOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzdesOAfEeywYqrNq80A_A" base_Element="_tzc3oeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tzeFwOAfEeywYqrNq80A_A" base_Element="_tzdeseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tzyO0OAfEeywYqrNq80A_A" base_Element="_tzxnwOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Annotations xmi:id="_tzyO0eAfEeywYqrNq80A_A" base_Element="_tzxnwOAfEeywYqrNq80A_A">
    <annotations xmi:id="_tzyO0uAfEeywYqrNq80A_A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tzzc8OAfEeywYqrNq80A_A" base_Element="_tzy14OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Annotations xmi:id="_tzzc8eAfEeywYqrNq80A_A" base_Element="_tzy14OAfEeywYqrNq80A_A">
    <annotations xmi:id="_tz0EAOAfEeywYqrNq80A_A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_tz0rEOAfEeywYqrNq80A_A" base_Element="_tz0EAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Annotations xmi:id="_tz1SIOAfEeywYqrNq80A_A" base_Element="_tz0EAeAfEeywYqrNq80A_A">
    <annotations xmi:id="_tz1SIeAfEeywYqrNq80A_A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_tz7YwOAfEeywYqrNq80A_A" base_Element="_tz6KoeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_tz91AOAfEeywYqrNq80A_A" base_Element="_tz8m4OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0LQYOAfEeywYqrNq80A_A" base_Element="_t0KCQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t0MegOAfEeywYqrNq80A_A" base_Property="_t0L3cOAfEeywYqrNq80A_A" siblings="_t2WaoOAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0NFkOAfEeywYqrNq80A_A" base_Element="_t0L3cOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0NsoOAfEeywYqrNq80A_A" base_Element="_t0NFkeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0OTsOAfEeywYqrNq80A_A" base_Element="_t0NsoeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0O6wOAfEeywYqrNq80A_A" base_Element="_t0OTseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0Ph0OAfEeywYqrNq80A_A" base_Element="_t0O6weAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0Qv8OAfEeywYqrNq80A_A" base_Element="_t0QI4OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t0R-EOAfEeywYqrNq80A_A" base_Property="_t0Qv8eAfEeywYqrNq80A_A" siblings="_t2XowOAfEeywYqrNq80A_A _t2Y24OAfEeywYqrNq80A_A _t2aFAeAfEeywYqrNq80A_A _t2bTIOAfEeywYqrNq80A_A _t2chQOAfEeywYqrNq80A_A _t2eWceAfEeywYqrNq80A_A _t2e9guAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0R-EeAfEeywYqrNq80A_A" base_Element="_t0Qv8eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t0TzQOAfEeywYqrNq80A_A" base_Property="_t0TMMOAfEeywYqrNq80A_A" siblings="_t2gysOAfEeywYqrNq80A_A _t2iA0eAfEeywYqrNq80A_A _t2j2AeAfEeywYqrNq80A_A _t2kdEuAfEeywYqrNq80A_A _t2lrMOAfEeywYqrNq80A_A _t2m5UOAfEeywYqrNq80A_A _t2ngYOAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0TzQeAfEeywYqrNq80A_A" base_Element="_t0TMMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t0VocOAfEeywYqrNq80A_A" base_Property="_t0VBYOAfEeywYqrNq80A_A" siblings="_t2oHcOAfEeywYqrNq80A_A _t2pVkOAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0WPgOAfEeywYqrNq80A_A" base_Element="_t0VBYOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0W2keAfEeywYqrNq80A_A" base_Element="_t0WPgeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0k5AOAfEeywYqrNq80A_A" base_Element="_t0W2kuAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0mHIOAfEeywYqrNq80A_A" base_Element="_t0k5AeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0nVQOAfEeywYqrNq80A_A" base_Element="_t0muMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0n8UeAfEeywYqrNq80A_A" base_Element="_t0nVQeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0pKcOAfEeywYqrNq80A_A" base_Element="_t0n8UuAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0pxgeAfEeywYqrNq80A_A" base_Element="_t0pKceAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t0q_oOAfEeywYqrNq80A_A" base_Property="_t0qYkOAfEeywYqrNq80A_A" siblings="_t2p8oOAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0q_oeAfEeywYqrNq80A_A" base_Element="_t0qYkOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0rmsuAfEeywYqrNq80A_A" base_Element="_t0rmsOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0sNwuAfEeywYqrNq80A_A" base_Element="_t0sNwOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0tb4OAfEeywYqrNq80A_A" base_Element="_t0s00OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0uC8OAfEeywYqrNq80A_A" base_Element="_t0tb4eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0uqAOAfEeywYqrNq80A_A" base_Element="_t0uC8eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0xGQOAfEeywYqrNq80A_A" base_Element="_t0wfMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0xtUOAfEeywYqrNq80A_A" base_Element="_t0xGQeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0yUYOAfEeywYqrNq80A_A" base_Element="_t0xtUeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0zigOAfEeywYqrNq80A_A" base_Element="_t0y7cOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t00woOAfEeywYqrNq80A_A" base_Element="_t00JkOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t01-wOAfEeywYqrNq80A_A" base_Element="_t01XsOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Array xmi:id="_t02l0eAfEeywYqrNq80A_A" dimensions="2" base_Element="_t01-weAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t03M4OAfEeywYqrNq80A_A" base_Element="_t01-weAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t03z8OAfEeywYqrNq80A_A" base_Property="_t03M4eAfEeywYqrNq80A_A" siblings="_t2rKwOAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t04bAOAfEeywYqrNq80A_A" base_Element="_t03M4eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t05pIOAfEeywYqrNq80A_A" base_Element="_t05CEOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t063QOAfEeywYqrNq80A_A" base_Property="_t06QMOAfEeywYqrNq80A_A" siblings="_t2sY4eAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t063QeAfEeywYqrNq80A_A" base_Element="_t06QMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t08FYOAfEeywYqrNq80A_A" base_Element="_t07eUOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t09TgOAfEeywYqrNq80A_A" base_Element="_t08scOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0-hoOAfEeywYqrNq80A_A" base_Element="_t09TgeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0_IsOAfEeywYqrNq80A_A" base_Element="_t0-hoeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t0_vwOAfEeywYqrNq80A_A" base_Property="_t0_IseAfEeywYqrNq80A_A" siblings="_t2tnAeAfEeywYqrNq80A_A _t2uOEuAfEeywYqrNq80A_A _t2vcMOAfEeywYqrNq80A_A _t2wDQOAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t0_vweAfEeywYqrNq80A_A" base_Element="_t0_IseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1CMAOAfEeywYqrNq80A_A" base_Element="_t1Bk8OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Array xmi:id="_t1CzEuAfEeywYqrNq80A_A" dimensions="1" base_Element="_t1CzEOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1DaIeAfEeywYqrNq80A_A" base_Element="_t1CzEOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1EoQOAfEeywYqrNq80A_A" base_Element="_t1EBMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1FPUOAfEeywYqrNq80A_A" base_Element="_t1EoQeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1F2YOAfEeywYqrNq80A_A" base_Element="_t1FPUeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t1GdcOAfEeywYqrNq80A_A" base_Property="_t1F2YeAfEeywYqrNq80A_A" siblings="_t2wqUeAfEeywYqrNq80A_A _t2xRYuAfEeywYqrNq80A_A" root="true"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1GdceAfEeywYqrNq80A_A" base_Element="_t1F2YeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1HrkeAfEeywYqrNq80A_A" base_Element="_t1HEgOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1I5sOAfEeywYqrNq80A_A" base_Element="_t1ISoOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1JgwuAfEeywYqrNq80A_A" base_Element="_t1JgwOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1Ku4OAfEeywYqrNq80A_A" base_Element="_t1KH0OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1LV8uAfEeywYqrNq80A_A" base_Element="_t1LV8OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1NLIeAfEeywYqrNq80A_A" base_Element="_t1MkEOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1NyMuAfEeywYqrNq80A_A" base_Element="_t1NyMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1PAUeAfEeywYqrNq80A_A" base_Element="_t1OZQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1PnYuAfEeywYqrNq80A_A" base_Element="_t1PnYOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1QOcuAfEeywYqrNq80A_A" base_Element="_t1QOcOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1Q1guAfEeywYqrNq80A_A" base_Element="_t1Q1gOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1SDoOAfEeywYqrNq80A_A" base_Element="_t1RckOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1SqsOAfEeywYqrNq80A_A" base_Element="_t1SDoeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1TRwOAfEeywYqrNq80A_A" base_Element="_t1SqseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1VG8OAfEeywYqrNq80A_A" base_Element="_t1T40OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1VuAOAfEeywYqrNq80A_A" base_Element="_t1VG8eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1WVEeAfEeywYqrNq80A_A" base_Element="_t1VuAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1XjMOAfEeywYqrNq80A_A" base_Element="_t1W8IOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1YKQOAfEeywYqrNq80A_A" base_Element="_t1XjMeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1YxUOAfEeywYqrNq80A_A" base_Element="_t1YKQeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1ZYYOAfEeywYqrNq80A_A" base_Element="_t1YxUeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1Z_ceAfEeywYqrNq80A_A" base_Element="_t1ZYYeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1amgeAfEeywYqrNq80A_A" base_Element="_t1amgOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1b0oOAfEeywYqrNq80A_A" base_Element="_t1bNkOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1dCwOAfEeywYqrNq80A_A" base_Element="_t1cbsOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1dp0eAfEeywYqrNq80A_A" base_Element="_t1dCweAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Array xmi:id="_t1eQ4eAfEeywYqrNq80A_A" base_Element="_t1dp0uAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1e38OAfEeywYqrNq80A_A" base_Element="_t1dp0uAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Array xmi:id="_t1ffAeAfEeywYqrNq80A_A" base_Element="_t1e38eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1gGEOAfEeywYqrNq80A_A" base_Element="_t1e38eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Array xmi:id="_t1gtIOAfEeywYqrNq80A_A" base_Element="_t1gGEeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1hUMeAfEeywYqrNq80A_A" base_Element="_t1gGEeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Generics xmi:id="_t1iiUOAfEeywYqrNq80A_A" genericsValue="Entity" base_Element="_t1h7QOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1jJYOAfEeywYqrNq80A_A" base_Element="_t1h7QOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1jwcOAfEeywYqrNq80A_A" base_Element="_t1jJYeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1kXgOAfEeywYqrNq80A_A" base_Element="_t1jwceAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1na0OAfEeywYqrNq80A_A" base_Element="_t1k-kOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1oB4uAfEeywYqrNq80A_A" base_Element="_t1oB4OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1pQAOAfEeywYqrNq80A_A" base_Element="_t1oo8OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t1qeIOAfEeywYqrNq80A_A" base_Element="_t1p3EOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Array xmi:id="_t1rFMuAfEeywYqrNq80A_A" base_Element="_t1rFMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t14gkOAfEeywYqrNq80A_A" base_Element="_t1rFMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Array xmi:id="_t15usOAfEeywYqrNq80A_A" dimensions="2" base_Element="_t15HoOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t16VwOAfEeywYqrNq80A_A" base_Element="_t15HoOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2WaoeAfEeywYqrNq80A_A" base_Property="_t2WaoOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2XBsOAfEeywYqrNq80A_A" base_Element="_t2WaoOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2YP0OAfEeywYqrNq80A_A" base_Property="_t2XowOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2YP0eAfEeywYqrNq80A_A" base_Element="_t2XowOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2Zd8OAfEeywYqrNq80A_A" base_Property="_t2Y24OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2aFAOAfEeywYqrNq80A_A" base_Element="_t2Y24OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2asEOAfEeywYqrNq80A_A" base_Property="_t2aFAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2asEeAfEeywYqrNq80A_A" base_Element="_t2aFAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2bTIeAfEeywYqrNq80A_A" base_Property="_t2bTIOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2b6MOAfEeywYqrNq80A_A" base_Element="_t2bTIOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2chQeAfEeywYqrNq80A_A" base_Property="_t2chQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2eWcOAfEeywYqrNq80A_A" base_Element="_t2chQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2e9gOAfEeywYqrNq80A_A" base_Property="_t2eWceAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2e9geAfEeywYqrNq80A_A" base_Element="_t2eWceAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2e9g-AfEeywYqrNq80A_A" base_Property="_t2e9guAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2gLoOAfEeywYqrNq80A_A" base_Element="_t2e9guAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2gyseAfEeywYqrNq80A_A" base_Property="_t2gysOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2iA0OAfEeywYqrNq80A_A" base_Element="_t2gysOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2in4OAfEeywYqrNq80A_A" base_Property="_t2iA0eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2j2AOAfEeywYqrNq80A_A" base_Element="_t2iA0eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2kdEOAfEeywYqrNq80A_A" base_Property="_t2j2AeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2kdEeAfEeywYqrNq80A_A" base_Element="_t2j2AeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2lEIOAfEeywYqrNq80A_A" base_Property="_t2kdEuAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2lEIeAfEeywYqrNq80A_A" base_Element="_t2kdEuAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2lrMeAfEeywYqrNq80A_A" base_Property="_t2lrMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2mSQOAfEeywYqrNq80A_A" base_Element="_t2lrMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2m5UeAfEeywYqrNq80A_A" base_Property="_t2m5UOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2m5UuAfEeywYqrNq80A_A" base_Element="_t2m5UOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2ngYeAfEeywYqrNq80A_A" base_Property="_t2ngYOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2ngYuAfEeywYqrNq80A_A" base_Element="_t2ngYOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2ougOAfEeywYqrNq80A_A" base_Property="_t2oHcOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2ougeAfEeywYqrNq80A_A" base_Element="_t2oHcOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2pVkeAfEeywYqrNq80A_A" base_Property="_t2pVkOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2pVkuAfEeywYqrNq80A_A" base_Element="_t2pVkOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2p8oeAfEeywYqrNq80A_A" base_Property="_t2p8oOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2qjsOAfEeywYqrNq80A_A" base_Element="_t2p8oOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2rx0OAfEeywYqrNq80A_A" base_Property="_t2rKwOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2sY4OAfEeywYqrNq80A_A" base_Element="_t2rKwOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2s_8OAfEeywYqrNq80A_A" base_Property="_t2sY4eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2tnAOAfEeywYqrNq80A_A" base_Element="_t2sY4eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2uOEOAfEeywYqrNq80A_A" base_Property="_t2tnAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2uOEeAfEeywYqrNq80A_A" base_Element="_t2tnAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2u1IOAfEeywYqrNq80A_A" base_Property="_t2uOEuAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2u1IeAfEeywYqrNq80A_A" base_Element="_t2uOEuAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2vcMeAfEeywYqrNq80A_A" base_Property="_t2vcMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2vcMuAfEeywYqrNq80A_A" base_Element="_t2vcMOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2wDQeAfEeywYqrNq80A_A" base_Property="_t2wDQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2wqUOAfEeywYqrNq80A_A" base_Element="_t2wDQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2xRYOAfEeywYqrNq80A_A" base_Property="_t2wqUeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2xRYeAfEeywYqrNq80A_A" base_Element="_t2wqUeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:MultiDeclaration xmi:id="_t2x4cOAfEeywYqrNq80A_A" base_Property="_t2xRYuAfEeywYqrNq80A_A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_t2x4ceAfEeywYqrNq80A_A" base_Element="_t2xRYuAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3Ah8OAfEeywYqrNq80A_A" base_Element="_t2_64OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3BwEOAfEeywYqrNq80A_A" base_Element="_t3BJAOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3DlQOAfEeywYqrNq80A_A" base_Element="_t3BwEeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3XuUOAfEeywYqrNq80A_A" base_Element="_t3DlQeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3YVYOAfEeywYqrNq80A_A" base_Element="_t3XuUeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3ZjgOAfEeywYqrNq80A_A" base_Element="_t3Y8cOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3aKkOAfEeywYqrNq80A_A" base_Element="_t3ZjgeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3bYsOAfEeywYqrNq80A_A" base_Element="_t3axoOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3b_wOAfEeywYqrNq80A_A" base_Element="_t3bYseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3dN4OAfEeywYqrNq80A_A" base_Element="_t3cm0OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3ecAOAfEeywYqrNq80A_A" base_Element="_t3dN4eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3fDEOAfEeywYqrNq80A_A" base_Element="_t3ecAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3g4QOAfEeywYqrNq80A_A" base_Element="_t3fDEeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3hfUOAfEeywYqrNq80A_A" base_Element="_t3g4QeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3jUgOAfEeywYqrNq80A_A" base_Element="_t3iGYOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3kioOAfEeywYqrNq80A_A" base_Element="_t3jUgeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3lJsOAfEeywYqrNq80A_A" base_Element="_t3kioeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3mX0OAfEeywYqrNq80A_A" base_Element="_t3lJseAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3m-4OAfEeywYqrNq80A_A" base_Element="_t3mX0eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3oNAOAfEeywYqrNq80A_A" base_Element="_t3m-4eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3o0EOAfEeywYqrNq80A_A" base_Element="_t3oNAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3qCMOAfEeywYqrNq80A_A" base_Element="_t3pbIOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3rQUOAfEeywYqrNq80A_A" base_Element="_t3qpQOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3r3YOAfEeywYqrNq80A_A" base_Element="_t3rQUeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3secOAfEeywYqrNq80A_A" base_Element="_t3r3YeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3tskOAfEeywYqrNq80A_A" base_Element="_t3tFgOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3uToOAfEeywYqrNq80A_A" base_Element="_t3tskeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3vhwOAfEeywYqrNq80A_A" base_Element="_t3uToeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3wI0OAfEeywYqrNq80A_A" base_Element="_t3vhweAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3xW8OAfEeywYqrNq80A_A" base_Element="_t3wI0eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3x-AOAfEeywYqrNq80A_A" base_Element="_t3xW8eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3zMIOAfEeywYqrNq80A_A" base_Element="_t3x-AeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3zzMOAfEeywYqrNq80A_A" base_Element="_t3zMIeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t31oYOAfEeywYqrNq80A_A" base_Element="_t3zzMeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t32PcOAfEeywYqrNq80A_A" base_Element="_t31oYeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t33dkOAfEeywYqrNq80A_A" base_Element="_t322gOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t34EoOAfEeywYqrNq80A_A" base_Element="_t33dkeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t34rsOAfEeywYqrNq80A_A" base_Element="_t34EoeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3550OAfEeywYqrNq80A_A" base_Element="_t35SwOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t36g4OAfEeywYqrNq80A_A" base_Element="_t3550eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t37vAOAfEeywYqrNq80A_A" base_Element="_t37H8OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t389IOAfEeywYqrNq80A_A" base_Element="_t37vAeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t39kMOAfEeywYqrNq80A_A" base_Element="_t389IeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3-yUOAfEeywYqrNq80A_A" base_Element="_t39kMeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t3_ZYOAfEeywYqrNq80A_A" base_Element="_t3-yUeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t4AngOAfEeywYqrNq80A_A" base_Element="_t4AAcOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t4B1oOAfEeywYqrNq80A_A" base_Element="_t4AngeAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t4DDwOAfEeywYqrNq80A_A" base_Element="_t4CcsOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t4ER4OAfEeywYqrNq80A_A" base_Element="_t4Dq0OAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t4E48OAfEeywYqrNq80A_A" base_Element="_t4ER4eAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t4GHEOAfEeywYqrNq80A_A" base_Element="_t4FgAOAfEeywYqrNq80A_A"/>
  <UMLLabProfile:Reference xmi:id="_t4GuIOAfEeywYqrNq80A_A" base_Element="_t4GHEeAfEeywYqrNq80A_A"/>
</xmi:XMI>
